load(file.path(path.in17, "processed.rda")) #load Rdata file with phyloseq object of samples from 2017 paper
sam17 <- as.data.frame(df)
load(file.path(path.in15, "PregnancyClosed15.Rdata")) #load Rdata file with phyloseq object of samples from 2015 paper
sam15 <- as.data.frame(PS@sam_data)
remove(PS, PSbs, PSPost, PSPreg)
sam15$SampleID <- replace(x <- sam15$SampleID, x=="1001301318.rs", "1001301318") #remove ".rs" designation -- was causing an item to be missed (in sam_table)
View(sam17)
library(tidyverse);packageVersion("tidyverse")
library(readr);packageVersion("readr")
library(phyloseq); packageVersion("phyloseq")
main_dir <- "/Volumes/GoogleDrive/My Drive/Callahan Lab/vagMicrobiomeMetagenome/"
DFmg_path <- file.path(main_dir, "metadata", "tables_4_Ben.txt")
path.in15 <- file.path(main_dir, "16S_data", "digiulio2015")
path.in17 <- file.path(main_dir, "16S_data", "RepRefine_Scripts", "input")
DFmg <- DFmg_path %>%
read.table(header=TRUE, sep="\t", quote="",stringsAsFactors=FALSE) %>%
as.data.frame()
load(file.path(path.in17, "processed.rda")) #load Rdata file with phyloseq object of samples from 2017 paper
sam17 <- as.data.frame(df)
load(file.path(path.in15, "PregnancyClosed15.Rdata")) #load Rdata file with phyloseq object of samples from 2015 paper
sam15 <- as.data.frame(PS@sam_data)
remove(PS, PSbs, PSPost, PSPreg)
sam15$SampleID <- replace(x <- sam15$SampleID, x=="1001301318.rs", "1001301318") #remove ".rs" designation -- was causing an item to be missed (in sam_table)
colnames(DFmg) <- c("SampleIndex", "SampleType", "SubjectID", "SampleID", "GDcoll", "GWdell", "TermPre", "Operator", "TotalReads", "TotalPairs", "Sickle100_pe", "Sickle_pe", "Sickle_sngl", "PctTrim", "Human_pe", "Human_sngl", "PctHuman")
colnames(DFmg)
#fix pct.human column; remove "%"
for (i in c(1:nrow(DFmg))){
a <- DFmg[i,"PctHuman"]
b <- regexpr("%", a)
c <- regmatches(a, b, invert = TRUE)
d <- c[[1]][1]
DFmg[i,"PctHuman"] <- d
}
DFmg$PctHuman <- as.numeric(DFmg$PctHuman)
#express percent as proportion and add gestation weeks column
DFmg0 <- DFmg %>%
mutate(PctHuman=PctHuman/100,
GWcoll = GDcoll/7, #GW coll
GWcoll1=ceiling(GDcoll/7), #round up Gestation weeks to see if that makes 16S weeks match
SampleID_a=paste0(substr(SampleID, 1, 5), "01",substr(SampleID, 8, 9), "8"), #amplicon sample number
RNAlater=case_when(substr(SampleID,6,7) %in% c("35")~"Yes",
substr(SampleID,6,7) %in% c("01"~"No"))
)
for (i in c(1:nrow(DFmg))){
a <- DFmg[i,"PctHuman"]
b <- regexpr("%", a)
c <- regmatches(a, b, invert = TRUE)
d <- c[[1]][1]
DFmg[i,"PctHuman"] <- d
}
DFmg$PctHuman <- as.numeric(DFmg$PctHuman)
DFmg0 <- DFmg %>%
mutate(PctHuman=PctHuman/100,
GWcoll = GDcoll/7, #GW coll
GWcoll1=ceiling(GDcoll/7), #round up Gestation weeks to see if that makes 16S weeks match
SampleID_a=paste0(substr(SampleID, 1, 5), "01",substr(SampleID, 8, 9), "8"), #amplicon sample number
RNAlater=case_when(substr(DFmg$SampleID,6,7) %in% c("35")~"Yes",
substr(DFmg$SampleID,6,7) %in% c("01"~"No"))
)
DFmg0 <- DFmg %>%
mutate(PctHuman=PctHuman/100,
GWcoll = GDcoll/7, #GW coll
GWcoll1=ceiling(GDcoll/7), #round up Gestation weeks to see if that makes 16S weeks match
SampleID_a=paste0(substr(SampleID, 1, 5), "01",substr(SampleID, 8, 9), "8"), #amplicon sample number
RNAlater=case_when(substr(SampleID,6,7) %in% c("35")~"Yes",
substr(SampleID,6,7) %in% c("01")~"No"))
DFmg0["SampleID"== 4008435348, "SampleID"] <- 4004834348
has.shotgun17 <- rownames(sam17) %in% DFmg0$SampleID_a
sam170 <- sam17[has.shotgun17,]  #keep only samples with shotgun data
sam171 <- sam170 %>%  #keep only columns of interest from sample data frame
select(SampleID, GWcoll, GDcoll) %>%
rename(SampleID_a=SampleID, GWcoll_16S=GWcoll, GDcoll_16S=GDcoll) %>%
mutate(PaperCohort="2017")
has.shotgun15 <- sam15$SampleID %in% DFmg0$SampleID_a
sam150 <- sam15[has.shotgun15,] #keep only samples with shotgun data
sam151 <- sam150 %>%
select(SampleID, GWColl, GDColl) %>%
rename(SampleID_a=SampleID, GWcoll_16S=GWColl, GDcoll_16S=GDColl) %>%
mutate(PaperCohort="2015")
samPS <- rbind(sam171, sam151) %>%
as.data.frame()
DFmg1 <- DFmg0 %>%
left_join(samPS, by="SampleID_a") %>%
mutate(UAB = case_when(SampleID_a %in% sam170$SampleID_a[sam170$UAB_Sample==1] ~ "Yes"),
replace_na(UAB, "No"))
View(DFmg1)
DFmg1 <- DFmg0 %>%
left_join(samPS, by="SampleID_a") %>%
mutate(UAB = case_when(SampleID_a %in% sam170$SampleID_a[sam170$UAB_Sample==1] ~ "Yes"))
class(sam170$UAB_Sample)
SampleID_a %in% sam170$SampleID_a[sam170$UAB_Sample==1]
DFmg0$SampleID_a %in% sam170$SampleID_a[sam170$UAB_Sample==1]
DFmg1 <- DFmg0 %>%
left_join(samPS, by="SampleID_a") %>%
mutate(UAB = case_when(SampleID_a %in% sam17$SampleID_a[sam17$UAB_Sample==1] ~ "Yes"))
DFmg1 <- DFmg0 %>%
left_join(samPS, by="SampleID_a") %>%
mutate(UAB = case_when(UAB == 1~"Yes",
UAB!=1~"No"))
# 2017 paper
has.shotgun17 <- rownames(sam17) %in% DFmg0$SampleID_a
sam170 <- sam17[has.shotgun17,]  #keep only samples with shotgun data
sam171 <- sam170 %>%  #keep only columns of interest from sample data frame
select(SampleID, GWcoll, GDcoll) %>%
rename(SampleID_a=SampleID, GWcoll_16S=GWcoll, GDcoll_16S=GDcoll, UAB=UAB_Sample) %>%
mutate(PaperCohort="2017")
# 2017 paper
has.shotgun17 <- rownames(sam17) %in% DFmg0$SampleID_a
sam170 <- sam17[has.shotgun17,]  #keep only samples with shotgun data
sam171 <- sam170 %>%  #keep only columns of interest from sample data frame
select(SampleID, GWcoll, GDcol, UAB_Sample) %>%
rename(SampleID_a=SampleID, GWcoll_16S=GWcoll, GDcoll_16S=GDcoll, UAB=UAB_Sample) %>%
mutate(PaperCohort="2017")
# 2017 paper
has.shotgun17 <- rownames(sam17) %in% DFmg0$SampleID_a
sam170 <- sam17[has.shotgun17,]  #keep only samples with shotgun data
sam171 <- sam170 %>%  #keep only columns of interest from sample data frame
select(SampleID, GWcoll, GDcoll, UAB_Sample) %>%
rename(SampleID_a=SampleID, GWcoll_16S=GWcoll, GDcoll_16S=GDcoll, UAB=UAB_Sample) %>%
mutate(PaperCohort="2017")
# 2015 paper
has.shotgun15 <- sam15$SampleID %in% DFmg0$SampleID_a
sam150 <- sam15[has.shotgun15,] #keep only samples with shotgun data
sam151 <- sam150 %>%
select(SampleID, GWColl, GDColl) %>%
rename(SampleID_a=SampleID, GWcoll_16S=GWColl, GDcoll_16S=GDColl, UAB=NA) %>%
mutate(PaperCohort="2015")
# 2017 paper
has.shotgun17 <- rownames(sam17) %in% DFmg0$SampleID_a
sam170 <- sam17[has.shotgun17,]  #keep only samples with shotgun data
sam171 <- sam170 %>%  #keep only columns of interest from sample data frame
select(SampleID, GWcoll, GDcoll, UAB_Sample) %>%
rename(SampleID_a=SampleID, GWcoll_16S=GWcoll, GDcoll_16S=GDcoll, UAB=UAB_Sample) %>%
mutate(PaperCohort="2017")
# 2015 paper
has.shotgun15 <- sam15$SampleID %in% DFmg0$SampleID_a
sam150 <- sam15[has.shotgun15,] #keep only samples with shotgun data
sam151 <- sam150 %>%
select(SampleID, GWColl, GDColl) %>%
rename(SampleID_a=SampleID, GWcoll_16S=GWColl, GDcoll_16S=GDColl) %>%
mutate(PaperCohort="2015",
UAB=NA)
samPS <- rbind(sam171, sam151) %>%
as.data.frame()
#merge tables
DFmg1 <- DFmg0 %>%
left_join(samPS, by="SampleID_a") %>%
mutate(UAB = case_when(UAB == 1~"Yes",
UAB!=1~"No"))
#replace_na(UAB, "No"))
View(DFmg1)
# 2017 paper
has.shotgun17 <- rownames(sam17) %in% DFmg0$SampleID_a
sam170 <- sam17[has.shotgun17,]  #keep only samples with shotgun data
sam171 <- sam170 %>%  #keep only columns of interest from sample data frame
select(SampleID, GWcoll, GDcoll, UAB_Sample) %>%
rename(SampleID_a=SampleID, GWcoll_16S=GWcoll, GDcoll_16S=GDcoll, UAB=UAB_Sample) %>%
mutate(PaperCohort="2017")
# 2015 paper
has.shotgun15 <- sam15$SampleID %in% DFmg0$SampleID_a
sam150 <- sam15[has.shotgun15,] #keep only samples with shotgun data
sam151 <- sam150 %>%
select(SampleID, GWColl, GDColl) %>%
rename(SampleID_a=SampleID, GWcoll_16S=GWColl, GDcoll_16S=GDColl) %>%
mutate(PaperCohort="2015",
UAB="No")
samPS <- rbind(sam171, sam151) %>%
as.data.frame()
#merge tables
DFmg1 <- DFmg0 %>%
left_join(samPS, by="SampleID_a")
View(DFmg1)
# 2017 paper
has.shotgun17 <- rownames(sam17) %in% DFmg0$SampleID_a
sam170 <- sam17[has.shotgun17,]  #keep only samples with shotgun data
sam171 <- sam170 %>%  #keep only columns of interest from sample data frame
select(SampleID, GWcoll, GDcoll, UAB_Sample) %>%
rename(SampleID_a=SampleID, GWcoll_16S=GWcoll, GDcoll_16S=GDcoll, UAB=UAB_Sample) %>%
mutate(PaperCohort="2017",
UAB=case_when(UAB==1~"Yes",
UAB!=1~"No"))
# 2015 paper
has.shotgun15 <- sam15$SampleID %in% DFmg0$SampleID_a
sam150 <- sam15[has.shotgun15,] #keep only samples with shotgun data
sam151 <- sam150 %>%
select(SampleID, GWColl, GDColl) %>%
rename(SampleID_a=SampleID, GWcoll_16S=GWColl, GDcoll_16S=GDColl) %>%
mutate(PaperCohort="2015",
UAB="No")
samPS <- rbind(sam171, sam151) %>%
as.data.frame()
#merge tables
DFmg1 <- DFmg0 %>%
left_join(samPS, by="SampleID_a")
View(DFmg1)
library(tidyverse);packageVersion("tidyverse")
library(readr);packageVersion("readr")
library(phyloseq); packageVersion("phyloseq")
main_dir <- "/Volumes/GoogleDrive/My Drive/Callahan Lab/vagMicrobiomeMetagenome/"
DFmg_path <- file.path(main_dir, "metadata", "tables_4_Ben.txt")
path.in15 <- file.path(main_dir, "16S_data", "digiulio2015")
path.in17 <- file.path(main_dir, "16S_data", "RepRefine_Scripts", "input")
DFmg <- DFmg_path %>%
read.table(header=TRUE, sep="\t", quote="",stringsAsFactors=FALSE) %>%
as.data.frame()
load(file.path(path.in17, "processed.rda")) #load Rdata file with phyloseq object of samples from 2017 paper
sam17 <- as.data.frame(df)
load(file.path(path.in15, "PregnancyClosed15.Rdata")) #load Rdata file with phyloseq object of samples from 2015 paper
sam15 <- as.data.frame(PS@sam_data)
remove(PS, PSbs, PSPost, PSPreg)
sam15$SampleID <- replace(x <- sam15$SampleID, x=="1001301318.rs", "1001301318") #remove ".rs" designation -- was causing an item to be missed (in sam_table)
colnames(DFmg) <- c("SampleIndex", "SampleType", "SubjectID", "SampleID", "GDcoll", "GWdell", "TermPre", "Operator", "TotalReads", "TotalPairs", "Sickle100_pe", "Sickle_pe", "Sickle_sngl", "PctTrim", "Human_pe", "Human_sngl", "PctHuman")
colnames(DFmg)
#fix pct.human column; remove "%"
for (i in c(1:nrow(DFmg))){
a <- DFmg[i,"PctHuman"]
b <- regexpr("%", a)
c <- regmatches(a, b, invert = TRUE)
d <- c[[1]][1]
DFmg[i,"PctHuman"] <- d
}
DFmg$PctHuman <- as.numeric(DFmg$PctHuman)
#express percent as proportion and add gestation weeks column
DFmg0 <- DFmg %>%
mutate(PctHuman=PctHuman/100,
GWcoll = GDcoll/7, #GW coll
GWcoll1=ceiling(GDcoll/7), #round up Gestation weeks to see if that makes 16S weeks match
SampleID_a=paste0(substr(SampleID, 1, 5), "01",substr(SampleID, 8, 9), "8"), #amplicon sample number
RNAlater=case_when(substr(SampleID,6,7) %in% c("35")~"Yes",
substr(SampleID,6,7) %in% c("01")~"No"))
DFmg0["SampleID"== 4008435348, "SampleID"] <- 4004834348
# 2017 paper
has.shotgun17 <- rownames(sam17) %in% DFmg0$SampleID_a
sam170 <- sam17[has.shotgun17,]  #keep only samples with shotgun data
sam171 <- sam170 %>%  #keep only columns of interest from sample data frame
select(SampleID, GWcoll, GDcoll, UAB_Sample) %>%
rename(SampleID_a=SampleID, GWcoll_16S=GWcoll, GDcoll_16S=GDcoll, UAB=UAB_Sample) %>%
mutate(PaperCohort="2017",
UAB=case_when(UAB==1~"Yes",
UAB!=1~"No"))
# 2015 paper
has.shotgun15 <- sam15$SampleID %in% DFmg0$SampleID_a
sam150 <- sam15[has.shotgun15,] #keep only samples with shotgun data
sam151 <- sam150 %>%
select(SampleID, GWColl, GDColl) %>%
rename(SampleID_a=SampleID, GWcoll_16S=GWColl, GDcoll_16S=GDColl) %>%
mutate(PaperCohort="2015",
UAB="No")
samPS <- rbind(sam171, sam151) %>%
as.data.frame()
#merge tables
DFmg1 <- DFmg0 %>%
left_join(samPS, by="SampleID_a")
View(DFmg1)
#write_delim(DFmg1,"./shotgunMetadata.tsv", delim = "\t")
sessionInfo()
write_delim(DFmg1,"./shotgunMetadata.tsv", delim = "\t")
library(tidyverse); packageVersion("tidyverse")
library(phyloseq); packageVersion("phyloseq")
library(ggpubr) ; packageVersion("ggpubr")
main_dir <- "/Volumes/GoogleDrive/My Drive/Callahan Lab/vagMicrobiomeMetagenome/abundanceMethodsComparisons"
PS_path <- file.path(main_dir, "PS_RData")
metaphlanPS <- file.path(PS_path, "metaphlan_PS.RData")
brackenPS <- file.path(PS_path, "bracken_PS.RData")
sixteenSPS <- file.path(PS_path, "16S_PS.RData")
output_dir <- file.path(main_dir, "analysisOutput")
df_path <- "/Volumes/GoogleDrive/My Drive/Callahan Lab/vagMicrobiomeMetagenome/metadata/shotgunMetadata.tsv"
load(file=metaphlanPS)
load(file=brackenPS)
load(file=sixteenSPS)
df <- read.table(df_path, sep="\t", header=TRUE, stringsAsFactors = FALSE)
tableGardMax <- function(PS){
PS0 <- PS %>%
psmelt()
PS1 <- PS0 %>%
aggregate(data=., Abundance~SampleID, max) %>%
left_join(PS0[,c("SampleID", "SubjectID", "Genus", "Abundance", "TermPre", "UAB", "PaperCohort")], by=c("Abundance", "SampleID")) %>%
mutate(SubjectID=as.integer(as.character(SubjectID)),
GardMax=case_when(Genus=="Gardnerella"~"Yes",
Genus!="Gardnerella"~"No")) %>%
#full_join(df[,c("TermPre", "SubjectID", )], by="SubjectID") %>%
unique() %>%
filter(SubjectID!=10604)
return(table(PS1$GardMax, PS1$TermPre))
}
PS<- PS_16S
PS0 <- PS %>%
psmelt()
PS1 <- PS0 %>%
aggregate(data=., Abundance~SampleID, max) %>%
left_join(PS0[,c("SampleID", "SubjectID", "Genus", "Abundance", "TermPre", "UAB", "PaperCohort")], by=c("Abundance", "SampleID")) %>%
mutate(SubjectID=as.integer(as.character(SubjectID)),
GardMax=case_when(Genus=="Gardnerella"~"Yes",
Genus!="Gardnerella"~"No")) %>%
#full_join(df[,c("TermPre", "SubjectID", )], by="SubjectID") %>%
unique() %>%
filter(is.na(Abundance))
colnames(PS0)
PS1 <- PS0 %>%
aggregate(data=., Abundance~SampleID, max) %>%
left_join(PS0[,c("SampleID", "SubjectID", "Genus", "Abundance")], by=c("Abundance", "SampleID")) %>%
mutate(SubjectID=as.integer(as.character(SubjectID)),
GardMax=case_when(Genus=="Gardnerella"~"Yes",
Genus!="Gardnerella"~"No")) %>%
full_join(df[,c("TermPre", "TermPre", "UAB", "PaperCohort", "SubjectID")], by="SubjectID") %>%
unique() %>%
filter(is.na(Abundance))
ftable(PS)
count(data=PS1, GardMax, TermPre)
?count
count(PS1)
count(PS1$GardMax)
tally(PS1$GardMax)
?tabulate
install.packages("tables")
library(tables)
tabular(GardMax,TermPre~PaperCohort, data=PS)
tabular(GardMax,TermPre~PaperCohort, data=PS1)
PS1 <- PS0 %>%
aggregate(data=., Abundance~SampleID, max) %>%
left_join(PS0[,c("SampleID", "SubjectID", "Genus", "Abundance")], by=c("Abundance", "SampleID")) %>%
mutate(SubjectID=as.integer(as.character(SubjectID)),
GardMax=case_when(Genus=="Gardnerella"~"Yes",
Genus!="Gardnerella"~"No")) %>%
left_join(df[,c("TermPre", "TermPre", "UAB", "PaperCohort", "SubjectID")], by="SubjectID") %>%
unique() %>%
filter(is.na(Abundance))
PS1 <- PS0 %>%
aggregate(data=., Abundance~SampleID, max) %>%
left_join(PS0[,c("SampleID", "SubjectID", "Genus", "Abundance")], by=c("Abundance", "SampleID")) %>%
mutate(SubjectID=as.integer(as.character(SubjectID)),
GardMax=case_when(Genus=="Gardnerella"~"Yes",
Genus!="Gardnerella"~"No")) %>%
left_join(df[,c("TermPre", "TermPre", "UAB", "PaperCohort", "SubjectID")], by="SubjectID") %>%
unique()
PS1 <- PS0 %>%
aggregate(data=., Abundance~SampleID, max) %>%
left_join(PS0[,c("SampleID", "SubjectID", "Genus", "Abundance")], by=c("Abundance", "SampleID")) %>%
mutate(SubjectID=as.integer(as.character(SubjectID)),
GardMax=case_when(Genus=="Gardnerella"~"Yes",
Genus!="Gardnerella"~"No")) #%>%
PS1 <- PS0 %>%
aggregate(data=., Abundance~SampleID, max) %>%
left_join(PS0[,c("SampleID", "SubjectID", "Genus", "Abundance")], by=c("Abundance", "SampleID")) %>%
mutate(SubjectID=as.integer(as.character(SubjectID)),
GardMax=case_when(Genus=="Gardnerella"~"Yes",
Genus!="Gardnerella"~"No")) %>%
left_join(df[,c("TermPre", "UAB", "PaperCohort", "SubjectID")], by="SubjectID") %>%
return(table(PS1$GardMax, PS1$TermPre))
PS1 <- PS0 %>%
aggregate(data=., Abundance~SampleID, max) %>%
left_join(PS0[,c("SampleID", "SubjectID", "Genus", "Abundance")], by=c("Abundance", "SampleID")) %>%
mutate(SubjectID=as.integer(as.character(SubjectID)),
GardMax=case_when(Genus=="Gardnerella"~"Yes",
Genus!="Gardnerella"~"No")) %>%
left_join(df[,c("TermPre", "UAB", "PaperCohort", "SubjectID")], by="SubjectID")
PS1 <- PS0 %>%
aggregate(data=., Abundance~SampleID, max) %>%
left_join(PS0[,c("SampleID", "SubjectID", "Genus", "Abundance")], by=c("Abundance", "SampleID")) %>%
mutate(SubjectID=as.integer(as.character(SubjectID)),
GardMax=case_when(Genus=="Gardnerella"~"Yes",
Genus!="Gardnerella"~"No")) %>%
right_join(df[,c("TermPre", "UAB", "PaperCohort", "SubjectID")], by="SubjectID")
PS1 <- PS0 %>%
aggregate(data=., Abundance~SampleID, max) %>%
left_join(PS0[,c("SampleID", "SubjectID", "Genus", "Abundance")], by=c("Abundance", "SampleID")) %>%
mutate(SubjectID=as.integer(as.character(SubjectID)),
GardMax=case_when(Genus=="Gardnerella"~"Yes",
Genus!="Gardnerella"~"No")) #%>%
tableGardMax <- function(PS){
PS0 <- PS %>%
psmelt()
PS1 <- PS0 %>%
aggregate(data=., Abundance~SampleID, max) %>%
left_join(PS0[,c("SampleID", "SubjectID", "Genus", "Abundance")], by=c("Abundance", "SampleID")) %>%
mutate(SubjectID=as.integer(as.character(SubjectID)),
GardMax=case_when(Genus=="Gardnerella"~"Yes",
Genus!="Gardnerella"~"No")) #%>%
inner_join(df[,c("TermPre", "UAB", "PaperCohort", "SubjectID")], by="SubjectID")
return(table(PS1$GardMax, PS1$TermPre))
}
PS1 <- PS0 %>%
aggregate(data=., Abundance~SampleID, max) %>%
left_join(PS0[,c("SampleID", "SubjectID", "Genus", "Abundance")], by=c("Abundance", "SampleID")) %>%
mutate(SubjectID=as.integer(as.character(SubjectID)),
GardMax=case_when(Genus=="Gardnerella"~"Yes",
Genus!="Gardnerella"~"No")) %>%
inner_join(df[,c("TermPre", "UAB", "PaperCohort", "SubjectID")], by="SubjectID")
PS1 <- PS0 %>%
aggregate(data=., Abundance~SampleID, max) %>%
left_join(PS0[,c("SampleID", "SubjectID", "Genus", "Abundance")], by=c("Abundance", "SampleID")) %>%
mutate(SubjectID=as.integer(as.character(SubjectID)),
GardMax=case_when(Genus=="Gardnerella"~"Yes",
Genus!="Gardnerella"~"No")) %>%
left_join(df[,c("TermPre", "UAB", "PaperCohort", "SubjectID")], by="SubjectID") %>%
unique()
PS1 <- PS0 %>%
aggregate(data=., Abundance~SampleID, max) %>%
left_join(PS0[,c("SampleID", "SubjectID", "Genus", "Abundance")], by=c("Abundance", "SampleID")) %>%
mutate(SubjectID=as.integer(as.character(SubjectID)),
GardMax=case_when(Genus=="Gardnerella"~"Yes",
Genus!="Gardnerella"~"No")) %>%
left_join(unique(df[,c("TermPre", "UAB", "PaperCohort", "SubjectID")]), by="SubjectID") %>%
return(table(PS1$GardMax, PS1$TermPre))
PS1 <- PS0 %>%
aggregate(data=., Abundance~SampleID, max) %>%
left_join(PS0[,c("SampleID", "SubjectID", "Genus", "Abundance")], by=c("Abundance", "SampleID")) %>%
mutate(SubjectID=as.integer(as.character(SubjectID)),
GardMax=case_when(Genus=="Gardnerella"~"Yes",
Genus!="Gardnerella"~"No")) %>%
left_join(unique(df[,c("TermPre", "UAB", "PaperCohort", "SubjectID")]), by="SubjectID")
PS1 <- PS0 %>%
aggregate(data=., Abundance~SampleID, max) %>%
left_join(PS0[,c("SampleID", "SubjectID", "Genus", "Abundance")], by=c("Abundance", "SampleID")) %>%
mutate(SubjectID=as.integer(as.character(SubjectID)),
GardMax=case_when(Genus=="Gardnerella"~"Yes",
Genus!="Gardnerella"~"No"))
nrow(unique(df[,c("TermPre", "UAB", "PaperCohort", "SubjectID")]))
PS1 <- PS0 %>%
aggregate(data=., Abundance~SampleID, max) %>%
left_join(PS0[,c("SampleID", "SubjectID", "Genus", "Abundance")], by=c("Abundance", "SampleID")) %>%
mutate(SubjectID=as.integer(as.character(SubjectID)),
GardMax=case_when(Genus=="Gardnerella"~"Yes",
Genus!="Gardnerella"~"No"),
SampleID_a=SampleID)
PS1 <- PS0 %>%
aggregate(data=., Abundance~SampleID, max) %>%
left_join(PS0[,c("SampleID", "SubjectID", "Genus", "Abundance")], by=c("Abundance", "SampleID")) %>%
mutate(SubjectID=as.integer(as.character(SubjectID)),
GardMax=case_when(Genus=="Gardnerella"~"Yes",
Genus!="Gardnerella"~"No"),
SampleID_a=SampleID) %>%
left_join(unique(df[,c("TermPre", "UAB", "PaperCohort", "SampleID_a")]), by="SampleID_a")
class(df$SampleID_a)
PS1 <- PS0 %>%
aggregate(data=., Abundance~SampleID, max) %>%
left_join(PS0[,c("SampleID", "SubjectID", "Genus", "Abundance")], by=c("Abundance", "SampleID")) %>%
mutate(SampleID_a=as.integer(as.character(SampleID)),
GardMax=case_when(Genus=="Gardnerella"~"Yes",
Genus!="Gardnerella"~"No")) %>%
left_join(unique(df[,c("TermPre", "UAB", "PaperCohort", "SampleID_a")]), by="SampleID_a")
PS1 <- PS0 %>%
aggregate(data=., Abundance~SampleID, max) %>%
left_join(PS0[,c("SampleID", "SubjectID", "Genus", "Abundance")], by=c("Abundance", "SampleID")) %>%
mutate(SampleID_a=as.integer(as.character(SampleID)),
GardMax=case_when(Genus=="Gardnerella"~"Yes",
Genus!="Gardnerella"~"No"),
TermPre=df$TermPre[df$SampleID_a==SampleID_a])
PS1 <- PS0 %>%
aggregate(data=., Abundance~SampleID, max) %>%
left_join(PS0[,c("SampleID", "SubjectID", "Genus", "Abundance")], by=c("Abundance", "SampleID")) %>%
mutate(SampleID_a=as.integer(as.character(SampleID)),
GardMax=case_when(Genus=="Gardnerella"~"Yes",
Genus!="Gardnerella"~"No"),
TermPre=df$TermPre[df$SampleID_a==.$SampleID_a])
main_dir <- "/Volumes/GoogleDrive/My Drive/Callahan Lab/vagMicrobiomeMetagenome/"
path.in15 <- file.path(main_dir, "16S_data", "digiulio2015")
path.in17 <- file.path(main_dir, "16S_data", "RepRefine_Scripts", "input")
DFmg_path <- file.path(main_dir, "metadata", "shotgunMetadata.tsv")
output_dir <- file.path(main_dir, "abundanceMethodsComparisons", "PS_RData")
DFmg <- DFmg_path %>%
read.table(header=TRUE, sep="\t", quote="",stringsAsFactors=FALSE) %>%
as.data.frame()
View(DFmg)
load(file.path(path.in17, "processed.rda")) #load Rdata file with phyloseq object of samples from 2017 paper
PS17 <- phyloseq(otu_table(st, taxa_are_rows=FALSE), sample_data(df), tax_table(tax)) %>%
transform_sample_counts(function(x) {x/sum(x)}) #make read counts into relative abundances
has.shotgun <- rownames(PS17@sam_data) %in% studyIDs
studyIDs <- DFmg$SampleID_a
load(file.path(path.in17, "processed.rda")) #load Rdata file with phyloseq object of samples from 2017 paper
PS17 <- phyloseq(otu_table(st, taxa_are_rows=FALSE), sample_data(df), tax_table(tax)) %>%
transform_sample_counts(function(x) {x/sum(x)}) #make read counts into relative abundances
has.shotgun <- rownames(PS17@sam_data) %in% studyIDs
PS16S_170 <- PS17 %>%
subset_samples(has.shotgun) #keep only samples of interest in OTU table and sam table
PS16S_170@sam_data <- PS16S_170@sam_data %>%   #keep only columns of interest from sample data frame
select(SampleID, SubjectID, GWcoll)
PS16S_170@sam_data[,"PaperCohort"] <- "2017"
PS16S_17L <- PS16S_170 %>%
subset_taxa(Genus=="Lactobacillus") %>%
tax_glom(taxrank="Species")
PS16S_17G <- PS16S_170 %>%
subset_taxa(Genus!="Lactobacillus") %>%
tax_glom(taxrank="Genus")
PS16S_17 <- merge_phyloseq(PS16S_17L, PS16S_17G)
summary(sample_sums(PS16S_17))
PS16S_17@tax_table <- PS16S_17@tax_table[,1:7] #make tax table uniform with 2015 PS object
PS16S_17 <- phyloseq(PS16S_17@otu_table, PS16S_17@tax_table, sam_data(DFmg)) #remove tree
PS16S_17 <- phyloseq(PS16S_17@otu_table, PS16S_17@tax_table, sample_data(DFmg)) #remove tree
PS16S_17@tax_table <- PS16S_17@tax_table[,1:7] #make tax table uniform with 2015 PS object
PS16S_17 <- phyloseq(PS16S_17@otu_table, PS16S_17@tax_table, sample_data(DFmg)) #remove tree
load(file.path(path.in17, "processed.rda")) #load Rdata file with phyloseq object of samples from 2017 paper
PS17 <- phyloseq(otu_table(st, taxa_are_rows=FALSE), sample_data(df), tax_table(tax)) %>%
transform_sample_counts(function(x) {x/sum(x)}) #make read counts into relative abundances
has.shotgun <- rownames(PS17@sam_data) %in% studyIDs
PS16S_170 <- PS17 %>%
subset_samples(has.shotgun) #keep only samples of interest in OTU table and sam table
DF17 <- DFmg %>%
filter(SampleID_a %in% PS17@sam_data$SampleID)
PS16S_170@sam_data <- PS16S_170@sam_data %>%   #keep only columns of interest from sample data frame
select(SampleID, SubjectID, GWcoll)
PS16S_170@sam_data[,"PaperCohort"] <- "2017"
PS16S_17L <- PS16S_170 %>%
subset_taxa(Genus=="Lactobacillus") %>%
tax_glom(taxrank="Species")
PS16S_17G <- PS16S_170 %>%
subset_taxa(Genus!="Lactobacillus") %>%
tax_glom(taxrank="Genus")
PS16S_17 <- merge_phyloseq(PS16S_17L, PS16S_17G)
summary(sample_sums(PS16S_17))
PS16S_17@tax_table <- PS16S_17@tax_table[,1:7] #make tax table uniform with 2015 PS object
PS16S_17 <- phyloseq(PS16S_17@otu_table, PS16S_17@tax_table, sample_data(DF17)) #remove tree
