TPFN <- (1.96^2)*((SN*(1-SN))/W^2)
TPFN
prev <- 0.5
N1 <- TPFN/prev
N1
SP <- 0.92
W <-  0.15
FPTN <- (1.96^2)*((SP*(1-SP))/W^2)
FPTN
prev <- 0.5
N2 <- FPTN/(1-prev)
N2
View(output$means)
Y <- otuDF[,3:ncol(otuDF)]
Dists <-  vegdist(Y, method = "bray")
group.County = factor(otuDF$County)
# Get the result using a double-resampling approach...
output = MSEgroup.d(Dists, group.County, nresamp = 1000) # Double resampling is done here (this is a permuation followed by bootstrapping to estimate uncertainty)
# Now here is the plot: Figure 1(b)
ng = length(levels(group.County))
n.i = table(group.County)
nmax = max(n.i)
nudge = 0
mycol = c("black","gray47","gray83")
mypch = c(21,24,25)
plot(2:nmax, output$means[1,2:nmax], type = "n", main = "",
ylab = "Multivariate pseudo SE", xlab = "Sample size (n)", ylim = c(0,0.4), xlim = c(1,35), las=1)
for (i in 1:ng) {
arrows(2:n.i[i]+nudge, output$upper[i,2:n.i[i]],
2:n.i[i]+nudge, output$lower[i,2:n.i[i]],
length = 0.05, angle = 90, code = 3, col = "black")
points(2:n.i[i]+nudge, output$means[i,2:n.i[i]], pch = mypch[i], bg = mycol[i])
nudge = nudge + 0.25
}
legend(x = "topright", legend = c("Harnett", "San Fransisc", "Washington"), pch = mypch, pt.bg = mycol)
View(output$means)
output$means["Washington", "25"]
mean25 <- output$means["Washington", "25"]
mean26 <- output$means["Washington", "26"]
(mean25-mean26)/mean25
(mean25-mean26)
mean25
(mean25-mean26)
mean25
((mean25-mean26)/mean25))*100
((mean25-mean26)/mean25)*100
otuDF2 <- psFlea3Prop %>%
psmelt %>%
select(sampleID, Bartonella, OTU, Abundance) %>%
spread(OTU, Abundance)
Y <- otuDF2[,3:ncol(otuDF2)]
Dists <-  vegdist(Y, method = "bray")
group.Bartonella = factor(otuDF2$Bartonella)
# Get the result using a double-resampling approach...
output = MSEgroup.d(Dists, group.Bartonella, nresamp = 1000) # Double resampling is done here (this is a permuation followed by bootstrapping to estimate uncertainty)
# Now here is the plot: Figure 1(b)
ng = length(levels(group.Bartonella))
n.i = table(group.Bartonella)
nmax = max(n.i)
nudge = 0
mycol = c("black","gray47")
mypch = c(21,24)
plot(2:nmax, output$means[1,2:nmax], type = "n", main = "",
ylab = "Multivariate pseudo SE", xlab = "Sample size (n)", ylim = c(0,0.4), xlim = c(1,35), las=1)
for (i in 1:ng) {
arrows(2:n.i[i]+nudge, output$upper[i,2:n.i[i]],
2:n.i[i]+nudge, output$lower[i,2:n.i[i]],
length = 0.05, angle = 90, code = 3, col = "black")
points(2:n.i[i]+nudge, output$means[i,2:n.i[i]], pch = mypch[i], bg = mycol[i])
nudge = nudge + 0.25
}
legend(x = "topright", legend = c("Negative", "Positive"),  pch = mypch, pt.bg = mycol)
mean23 <- output$means["0", "23"]
mean24 <- output$means["0", "24"]
((mean23-mean24)/mean24)*100
wolbachiaSensSpecDF <- make2x2(PCRtableProp, "Wolbachia", 2e-04) # Before filtering
library(tidyverse)
library(phyloseq)
set.seed(100)
dataDir <- "/Users/hlberman/Google Drive File Stream/My Drive/Callahan Lab/bartonella_fleas/flea_microbiome"
load(file.path(dataDir, "./phyloseqObjectFlea.Rdata"))
load(file.path(dataDir, "./phyloseqObjectFleaFiltered.Rdata"))
psFleaProp <- psFlea %>%
transform_sample_counts(function(otu) otu/sum(otu))
psFlea3Prop <- psFlea3 %>%
transform_sample_counts(function(otu) otu/sum(otu))
tax_table(psFlea) %>%
as("matrix") %>%
as_tibble(rownames="OTU") %>%
filter(Genus=="Bartonella") %>%
select(Species) %>%
table(useNA="ifany")
tax_table(psFlea) %>%
as("matrix") %>%
as_tibble(rownames="OTU") %>%
filter(Genus=="Rickettsia") %>%
select(Species) %>%
table(useNA="ifany")
tax_table(psFlea) %>%
as("matrix") %>%
as_tibble(rownames="OTU") %>%
filter(Genus=="Mycoplasma") %>%
select(Species) %>%
table(useNA="ifany")
tax_table(psFlea) %>%
as("matrix") %>%
as_tibble(rownames="OTU") %>%
filter(Genus=="Erlichia") %>%
select(Species) %>%
table(useNA="ifany")
tax_table(psFlea) %>%
as("matrix") %>%
as_tibble(rownames="OTU") %>%
filter(Genus=="Wolbachia") %>%
select(Species) %>%
table(useNA="ifany")
PCRtable <- psFlea %>%
tax_glom(taxrank="Genus") %>%
psmelt %>%
filter(Genus=="Bartonella"|
Genus=="Rickettsia"|
Genus=="Mycoplasma"|
Genus=="Ehrlichia"|
Genus=="Wolbachia") %>%
select(-OTU, -Kingdom, -Phylum, -Class, -Order, -Order, -Family) %>%
dplyr::rename(BartonellaPCR=Bartonella,
RickettsiaPCR=Rickettsia,
MycoplasmaPCR=Mycoplasma,
EhrlichiaPCR=Ehrlichia,
WolbachiaPCR=Wolbachia) %>%
mutate_at(vars(matches("PCR")),  ~case_when(.x==0~"PCR negative",
.x==1~"PCR positive")) %>%
spread(Genus, Abundance)
PCRtableProp <- psFleaProp %>%
tax_glom(taxrank="Genus") %>%
psmelt %>%
filter(Genus=="Bartonella"|
Genus=="Rickettsia"|
Genus=="Mycoplasma"|
Genus=="Ehrlichia"|
Genus=="Wolbachia") %>%
select(-OTU, -Kingdom, -Phylum, -Class, -Order, -Order, -Family) %>%
dplyr::rename(BartonellaPCR=Bartonella,
RickettsiaPCR=Rickettsia,
MycoplasmaPCR=Mycoplasma,
EhrlichiaPCR=Ehrlichia,
WolbachiaPCR=Wolbachia) %>%
mutate_at(vars(matches("PCR")),  ~case_when(.x==0~"PCR negative",
.x==1~"PCR positive")) %>%
spread(Genus, Abundance)
PCRtableProp %>%
gather("Genus", "Reads", c(Bartonella, Rickettsia, Wolbachia)) %>%
gather("Test", "Result", c(BartonellaPCR, RickettsiaPCR, WolbachiaPCR)) %>%
filter(Test=="BartonellaPCR"&Genus=="Bartonella"|
Test=="RickettsiaPCR"&Genus=="Rickettsia"|
Test=="WolbachiaPCR"&Genus=="Wolbachia") %>%
ggplot(aes(x=Result, y=Reads, color=Result)) +
geom_boxplot(alpha=0) +
geom_jitter() +
scale_color_manual(values=c("#D55E00", "#56B4E9"), labels=c("negative", "positive")) +
scale_x_discrete(labels=c("negative", "positive")) +
facet_wrap(~Genus, scales = "free_x") +
labs(y="Proportion NGS reads", x="PCR results") +
theme_grey() +
theme(legend.position = "none",
panel.grid.major.x = element_blank())
PCRtable %>%
gather("Genus", "Reads", c(Bartonella, Rickettsia, Wolbachia)) %>%
gather("Test", "Result", c(BartonellaPCR, RickettsiaPCR, WolbachiaPCR)) %>%
filter(Test=="BartonellaPCR"&Genus=="Bartonella"|
Test=="RickettsiaPCR"&Genus=="Rickettsia"|
Test=="WolbachiaPCR"&Genus=="Wolbachia") %>%
ggplot(aes(x=Result, y=Reads, color=Result)) +
geom_boxplot(alpha=0) +
geom_jitter() +
scale_color_manual(values=c("#D55E00", "#56B4E9"), labels=c("negative", "positive")) +
scale_x_discrete(labels=c("negative", "positive")) +
facet_wrap(~Genus, scales = "free_x") +
labs(y="NGS reads", x="PCR results") +
theme_grey() +
theme(legend.position = "none",
panel.grid.major.x = element_blank())
PCRtableProp %>%
select(Bartonella, Rickettsia, Wolbachia) %>%
summary
PCRtable %>%
select(Bartonella, Rickettsia, Wolbachia) %>%
summary
make2x2 <- function(df, genus, threshold){
df[, genus] <- ifelse(df[,genus]>=threshold, "Positive", "Negative")
df[, genus] <- factor(df[, genus], levels=c("Negative", "Positive"))
twoBytwo <- df[,c(genus, paste0(genus, "PCR"))] %>%
table
return(twoBytwo)
}
getF1scores <- function(twoBytwo){
truePos <- twoBytwo[2,2] #true positives
testPos <- twoBytwo[2,2] + twoBytwo[2,1]  #true postives + false positives
allPos <- twoBytwo[2,2] + twoBytwo[1,2] #true positives + false negatives
prec <- truePos/testPos
rec <- truePos/allPos
F1 <- 2/((1/prec)+(1/rec))
}
bartonella2x2s <- pmap(list(rep(data_frame(PCRtableProp), 1000),
rep("Bartonella", 1000),
seq(0.0001, 0.1, by=0.0001)),
make2x2)
bartF1s <- map_dbl(bartonella2x2s, getF1scores)
bartF1df <- data_frame(Threshold=seq(0.0001, 0.1, by=0.0001),
F1=bartF1s)
ggplot(bartF1df, aes(x=Threshold, y=F1)) +
geom_line() +
labs(title = "Bartonella Threshold vs. F1 Score")
bartF1df %>%
filter(F1==max(F1))
rickettsia2x2s <- pmap(list(rep(data_frame(PCRtableProp), 1000),
rep("Rickettsia", 1000),
seq(0.0001, 0.1, by=0.0001)),
make2x2)
rickF1s <- map_dbl(rickettsia2x2s, getF1scores)
rickF1df <- data_frame(Threshold=seq(0.0001, 0.1, by=0.0001),
F1=rickF1s)
ggplot(rickF1df, aes(x=Threshold, y=F1)) +
geom_line() +
labs(title = "Rickettsia Threshold vs. F1 Score")
rickF1df %>%
filter(F1==max(F1))
wolbachai2x2s <- pmap(list(rep(data_frame(PCRtableProp), 1000),
rep("Wolbachia", 1000),
seq(0.0001, 0.1, by=0.0001)),
make2x2)
wolbF1s <- map_dbl(wolbachai2x2s, getF1scores)
wolbF1df <- data_frame(Threshold=seq(0.0001, 0.1, by=0.0001),
F1=wolbF1s)
ggplot(wolbF1df, aes(x=Threshold, y=F1)) +
geom_line() +
labs(title = "Wolbachia Threshold vs. F1 Score")
wolbF1df %>%
filter(F1==max(F1))
bartonella2x2s <- pmap(list(rep(data_frame(PCRtable), 500),
rep("Bartonella", 500),
seq(1, 500, by=1)),
make2x2)
bartF1s <- map_dbl(bartonella2x2s, getF1scores)
bartF1df <- data_frame(Threshold=seq(1, 500, by=1),
F1=bartF1s)
ggplot(bartF1df, aes(x=Threshold, y=F1)) +
geom_line() +
labs(title = "Bartonella Threshold vs. F1 Score")
bartF1df %>%
filter(F1==max(F1))
bartF1df %>%
filter(Threshold==2e-04)
rickettsia2x2s <- pmap(list(rep(data_frame(PCRtable), 500),
rep("Rickettsia", 500),
seq(1, 500, by=1)),
make2x2)
rickF1s <- map_dbl(rickettsia2x2s, getF1scores)
rickF1df <- data_frame(Threshold=seq(1, 500, by=1),
F1=rickF1s)
ggplot(rickF1df, aes(x=Threshold, y=F1)) +
geom_line() +
labs(title = "Rickettsia Threshold vs. F1 Score")
rickF1df %>%
filter(F1==max(F1))
rickF1df %>%
filter(Threshold==4e-04)
wolbachai2x2s <- pmap(list(rep(data_frame(PCRtable), 500),
rep("Wolbachia", 500),
seq(1, 500, by=1)),
make2x2)
wolbF1s <- map_dbl(wolbachai2x2s, getF1scores)
wolbF1df <- data_frame(Threshold=seq(1, 500, by=1),
F1=wolbF1s)
ggplot(wolbF1df, aes(x=Threshold, y=F1)) +
geom_line() +
labs(title = "Wolbachia Threshold vs. F1 Score")
wolbF1df %>%
filter(F1==max(F1))
PCRtable2 <- psFlea3 %>%
tax_glom(taxrank="Genus") %>%
psmelt %>%
filter(Genus=="Bartonella"|
Genus=="Rickettsia"|
Genus=="Mycoplasma"|
Genus=="Ehrlichia"|
Genus=="Wolbachia") %>%
select(-OTU, -Kingdom, -Phylum, -Class, -Order, -Order, -Family) %>%
dplyr::rename(BartonellaPCR=Bartonella,
RickettsiaPCR=Rickettsia,
MycoplasmaPCR=Mycoplasma,
EhrlichiaPCR=Ehrlichia,
WolbachiaPCR=Wolbachia) %>%
mutate_at(vars(matches("PCR")),  ~case_when(.x==0~"PCR negative",
.x==1~"PCR positive")) %>%
spread(Genus, Abundance)
PCRtableProp2 <- psFlea3Prop %>%
tax_glom(taxrank="Genus") %>%
psmelt %>%
filter(Genus=="Bartonella"|
Genus=="Rickettsia"|
Genus=="Mycoplasma"|
Genus=="Ehrlichia"|
Genus=="Wolbachia") %>%
select(-OTU, -Kingdom, -Phylum, -Class, -Order, -Order, -Family) %>%
dplyr::rename(BartonellaPCR=Bartonella,
RickettsiaPCR=Rickettsia,
MycoplasmaPCR=Mycoplasma,
EhrlichiaPCR=Ehrlichia,
WolbachiaPCR=Wolbachia) %>%
mutate_at(vars(matches("PCR")),  ~case_when(.x==0~"PCR negative",
.x==1~"PCR positive")) %>%
spread(Genus, Abundance)
PCRtableProp2 %>%
gather("Genus", "Reads", c(Bartonella, Rickettsia, Wolbachia)) %>%
gather("Test", "Result", c(BartonellaPCR, RickettsiaPCR, WolbachiaPCR)) %>%
filter(Test=="BartonellaPCR"&Genus=="Bartonella"|
Test=="RickettsiaPCR"&Genus=="Rickettsia"|
Test=="WolbachiaPCR"&Genus=="Wolbachia") %>%
ggplot(aes(x=Result, y=Reads, color=Result)) +
geom_boxplot(alpha=0) +
geom_jitter() +
scale_color_manual(values=c("#D55E00", "#56B4E9"), labels=c("negative", "positive")) +
scale_x_discrete(labels=c("negative", "positive")) +
facet_wrap(~Genus, scales = "free_x") +
labs(y="Proportion NGS reads", x="PCR results") +
theme_grey() +
theme(legend.position = "none",
panel.grid.major.x = element_blank())
PCRtable2 %>%
gather("Genus", "Reads", c(Bartonella, Rickettsia, Wolbachia)) %>%
gather("Test", "Result", c(BartonellaPCR, RickettsiaPCR, WolbachiaPCR)) %>%
filter(Test=="BartonellaPCR"&Genus=="Bartonella"|
Test=="RickettsiaPCR"&Genus=="Rickettsia"|
Test=="WolbachiaPCR"&Genus=="Wolbachia") %>%
ggplot(aes(x=Result, y=Reads, color=Result)) +
geom_boxplot(alpha=0) +
geom_jitter() +
scale_color_manual(values=c("#D55E00", "#56B4E9"), labels=c("negative", "positive")) +
scale_x_discrete(labels=c("negative", "positive")) +
facet_wrap(~Genus, scales = "free_x") +
labs(y="NGS reads", x="PCR results") +
theme_grey() +
theme(legend.position = "none",
panel.grid.major.x = element_blank())
PCRtable2 %>%
select(Bartonella, Rickettsia, Wolbachia) %>%
summary
PCRtableProp2 %>%
select(Bartonella, Rickettsia, Wolbachia) %>%
summary
bartonella2x2s <- pmap(list(rep(data_frame(PCRtableProp2), 1000),
rep("Bartonella", 1000),
seq(0.0001, 0.1, by=0.0001)),
make2x2)
bartF1s <- map_dbl(bartonella2x2s, getF1scores)
bartF1df <- data_frame(Threshold=seq(0.0001, 0.1, by=0.0001),
F1=bartF1s)
ggplot(bartF1df, aes(x=Threshold, y=F1)) +
geom_line() +
labs(title = "Bartonella Threshold vs. F1 Score")
bartF1df %>%
filter(F1==max(F1))
rickettsia2x2s <- pmap(list(rep(data_frame(PCRtableProp2), 1000),
rep("Rickettsia", 1000),
seq(0.0001, 0.1, by=0.0001)),
make2x2)
rickF1s <- map_dbl(rickettsia2x2s, getF1scores)
rickF1df <- data_frame(Threshold=seq(0.0001, 0.1, by=0.0001),
F1=rickF1s)
ggplot(rickF1df, aes(x=Threshold, y=F1)) +
geom_line() +
#scale_x_log10() +
labs(title = "Rickettsia Threshold vs. F1 Score")
rickF1df %>%
filter(F1==max(F1))
wolbachai2x2s <- pmap(list(rep(data_frame(PCRtableProp2), 1000),
rep("Wolbachia", 1000),
seq(0.0001, 0.1, by=0.0001)),
make2x2)
wolbF1s <- map_dbl(wolbachai2x2s, getF1scores)
wolbF1df <- data_frame(Threshold=seq(0.0001, 0.1, by=0.0001),
F1=wolbF1s)
ggplot(wolbF1df, aes(x=Threshold, y=F1)) +
geom_line() +
labs(title = "Wolbachia Threshold vs. F1 Score")
wolbF1df %>%
filter(F1==max(F1))
bartonella2x2s <- pmap(list(rep(data_frame(PCRtable2), 500),
rep("Bartonella", 500),
seq(1, 500, by=1)),
make2x2)
bartF1s <- map_dbl(bartonella2x2s, getF1scores)
bartF1df <- data_frame(Threshold=seq(1, 500, by=1),
F1=bartF1s)
ggplot(bartF1df, aes(x=Threshold, y=F1)) +
geom_line() +
labs(title = "Bartonella Threshold vs. F1 Score")
bartF1df %>%
filter(F1==max(F1))
rickettsia2x2s <- pmap(list(rep(data_frame(PCRtable2), 500),
rep("Rickettsia", 500),
seq(1, 500, by=1)),
make2x2)
rickF1s <- map_dbl(rickettsia2x2s, getF1scores)
rickF1df <- data_frame(Threshold=seq(1, 500, by=1),
F1=rickF1s)
ggplot(rickF1df, aes(x=Threshold, y=F1)) +
geom_line() +
#scale_x_log10() +
labs(title = "Rickettsia Threshold vs. F1 Score")
rickF1df %>%
filter(F1==max(F1))
wolbachai2x2s <- pmap(list(rep(data_frame(PCRtable2), 500),
rep("Wolbachia", 500),
seq(1, 500, by=1)),
make2x2)
wolbF1s <- map_dbl(wolbachai2x2s, getF1scores)
wolbF1df <- data_frame(Threshold=seq(1, 500, by=1),
F1=wolbF1s)
ggplot(wolbF1df, aes(x=Threshold, y=F1)) +
geom_line() +
labs(title = "Wolbachia Threshold vs. F1 Score")
wolbF1df %>%
filter(F1==max(F1))
#function for testing senstitivity
sensitivityTest <- function(table){
truePos <- table[2,2]
falseNegs <- table[1,2]
sensitivity <- truePos/(truePos + falseNegs)
return(sensitivity)
}
#function for testing specificity
specificityTest <- function(table){
trueNeg <- table[1,1]
falsePos <- table[2,1]
specificity <- trueNeg/(trueNeg+falsePos)
return(specificity)
}
bartonellaSensSpecDF <- make2x2(PCRtableProp, "Bartonella", 2e-04) # Before filtering
bartonellaSensSpecDF
sensitivityTest(bartonellaSensSpecDF)
specificityTest(bartonellaSensSpecDF)
bartonellaSensSpecDFfilt <- make2x2(PCRtableProp2, "Bartonella", 3e-04) # After filtering
bartonellaSensSpecDFfilt
sensitivityTest(bartonellaSensSpecDFfilt)
specificityTest(bartonellaSensSpecDFfilt)
rickettsiaSensSpecDF <- make2x2(PCRtableProp, "Rickettsia", 4e-04) # Before filtering
rickettsiaSensSpecDF
sensitivityTest(rickettsiaSensSpecDF)
specificityTest(rickettsiaSensSpecDF)
rickettsiaSensSpecDFfilt <- make2x2(PCRtableProp2, "Rickettsia", 2e-04) # after filtering
rickettsiaSensSpecDFfilt
sensitivityTest(rickettsiaSensSpecDFfilt)
specificityTest(rickettsiaSensSpecDFfilt)
wolbachiaSensSpecDF <- make2x2(PCRtableProp, "Wolbachia", 2e-04) # Before filtering
wolbachiaSensSpecDF
sensitivityTest(wolbachiaSensSpecDF)
specificityTest(wolbachiaSensSpecDF)
wolbachiaSensSpecDF <- make2x2(PCRtableProp2, "Wolbachia", 3e-04) # Before filtering
wolbachiaSensSpecDF
sensitivityTest(wolbachiaSensSpecDF)
specificityTest(wolbachiaSensSpecDF)
(15+16)/45
15+16
(15+16)/45
library(tidyverse)
library(phyloseq)
library(vegan)
source(file = "./Anderson_mult_pseudo_SE.R")
set.seed(100)
dataDir <- "/Users/hlberman/Google Drive File Stream/My Drive/Callahan Lab/bartonella_fleas/flea_microbiome"
load(file.path(dataDir, "/phyloseqObjectFleaFiltered.Rdata"))
psFlea3Prop <- transform_sample_counts(psFlea3, function(otu) otu/sum(otu))
df <- sample_data(psFlea3) %>%
data.frame(stringsAsFactors = FALSE)
shannonDF <- estimate_richness(psFlea3, measures="Shannon") %>%
data.frame() %>%
rownames_to_column(var="sampleID")
summary(shannonDF)
sd(shannonDF$Shannon)
power.t.test(delta=0.76, sd=0.76, sig.level=0.05, power=0.8, type="two.sample", alternative="two.sided")
otuDF <- psFlea3Prop %>%
psmelt %>%
select(sampleID, County, OTU, Abundance) %>%
spread(OTU, Abundance)
Y <- otuDF[,3:ncol(otuDF)]
Dists <-  vegdist(Y, method = "bray")
group.County = factor(otuDF$County)
# Get the result using a double-resampling approach...
output = MSEgroup.d(Dists, group.County, nresamp = 1000) # Double resampling is done here (this is a permuation followed by bootstrapping to estimate uncertainty)
# Now here is the plot: Figure 1(b)
ng = length(levels(group.County))
n.i = table(group.County)
nmax = max(n.i)
nudge = 0
mycol = c("black","gray47","gray83")
mypch = c(21,24,25)
plot(2:nmax, output$means[1,2:nmax], type = "n", main = "",
ylab = "Multivariate pseudo SE", xlab = "Sample size (n)", ylim = c(0,0.4), xlim = c(1,35), las=1)
for (i in 1:ng) {
arrows(2:n.i[i]+nudge, output$upper[i,2:n.i[i]],
2:n.i[i]+nudge, output$lower[i,2:n.i[i]],
length = 0.05, angle = 90, code = 3, col = "black")
points(2:n.i[i]+nudge, output$means[i,2:n.i[i]], pch = mypch[i], bg = mycol[i])
nudge = nudge + 0.25
}
legend(x = "topright", legend = c("Harnett", "San Fransisc", "Washington"), pch = mypch, pt.bg = mycol)
mean25 <- output$means["Washington", "25"]
mean26 <- output$means["Washington", "26"]
mean25-mean26
((mean25-mean26)/mean25)*100
