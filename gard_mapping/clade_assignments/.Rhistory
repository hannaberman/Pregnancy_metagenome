scale_x_discrete(labels=c("negative", "positive")) +
facet_wrap(~Genus, scales = "free_x") +
labs(y="NGS reads", x="PCR results") +
theme_grey() +
theme(legend.position = "none",
panel.grid.major.x = element_blank())
PCRtable2 %>%
select(Bartonella, Rickettsia, Wolbachia) %>%
summary
PCRtableProp2 %>%
select(Bartonella, Rickettsia, Wolbachia) %>%
summary
bartonella2x2s <- pmap(list(rep(data_frame(PCRtableProp2), 1000),
rep("Bartonella", 1000),
seq(0.0001, 0.1, by=0.0001)),
make2x2)
bartF1s <- map_dbl(bartonella2x2s, getF1scores)
bartF1df <- data_frame(Threshold=seq(0.0001, 0.1, by=0.0001),
F1=bartF1s)
ggplot(bartF1df, aes(x=Threshold, y=F1)) +
geom_line() +
labs(title = "Bartonella Threshold vs. F1 Score")
bartF1df %>%
filter(F1==max(F1))
rickettsia2x2s <- pmap(list(rep(data_frame(PCRtableProp2), 1000),
rep("Rickettsia", 1000),
seq(0.0001, 0.1, by=0.0001)),
make2x2)
rickF1s <- map_dbl(rickettsia2x2s, getF1scores)
rickF1df <- data_frame(Threshold=seq(0.0001, 0.1, by=0.0001),
F1=rickF1s)
ggplot(rickF1df, aes(x=Threshold, y=F1)) +
geom_line() +
#scale_x_log10() +
labs(title = "Rickettsia Threshold vs. F1 Score")
rickF1df %>%
filter(F1==max(F1))
wolbachai2x2s <- pmap(list(rep(data_frame(PCRtableProp2), 1000),
rep("Wolbachia", 1000),
seq(0.0001, 0.1, by=0.0001)),
make2x2)
wolbF1s <- map_dbl(wolbachai2x2s, getF1scores)
wolbF1df <- data_frame(Threshold=seq(0.0001, 0.1, by=0.0001),
F1=wolbF1s)
ggplot(wolbF1df, aes(x=Threshold, y=F1)) +
geom_line() +
labs(title = "Wolbachia Threshold vs. F1 Score")
wolbF1df %>%
filter(F1==max(F1))
bartonella2x2s <- pmap(list(rep(data_frame(PCRtable2), 500),
rep("Bartonella", 500),
seq(1, 500, by=1)),
make2x2)
bartF1s <- map_dbl(bartonella2x2s, getF1scores)
bartF1df <- data_frame(Threshold=seq(1, 500, by=1),
F1=bartF1s)
ggplot(bartF1df, aes(x=Threshold, y=F1)) +
geom_line() +
labs(title = "Bartonella Threshold vs. F1 Score")
bartF1df %>%
filter(F1==max(F1))
rickettsia2x2s <- pmap(list(rep(data_frame(PCRtable2), 500),
rep("Rickettsia", 500),
seq(1, 500, by=1)),
make2x2)
rickF1s <- map_dbl(rickettsia2x2s, getF1scores)
rickF1df <- data_frame(Threshold=seq(1, 500, by=1),
F1=rickF1s)
ggplot(rickF1df, aes(x=Threshold, y=F1)) +
geom_line() +
#scale_x_log10() +
labs(title = "Rickettsia Threshold vs. F1 Score")
rickF1df %>%
filter(F1==max(F1))
wolbachai2x2s <- pmap(list(rep(data_frame(PCRtable2), 500),
rep("Wolbachia", 500),
seq(1, 500, by=1)),
make2x2)
wolbF1s <- map_dbl(wolbachai2x2s, getF1scores)
wolbF1df <- data_frame(Threshold=seq(1, 500, by=1),
F1=wolbF1s)
ggplot(wolbF1df, aes(x=Threshold, y=F1)) +
geom_line() +
labs(title = "Wolbachia Threshold vs. F1 Score")
wolbF1df %>%
filter(F1==max(F1))
#function for testing senstitivity
sensitivityTest <- function(table){
truePos <- table[2,2]
falseNegs <- table[1,2]
sensitivity <- truePos/(truePos + falseNegs)
return(sensitivity)
}
#function for testing specificity
specificityTest <- function(table){
trueNeg <- table[1,1]
falsePos <- table[2,1]
specificity <- trueNeg/(trueNeg+falsePos)
return(specificity)
}
bartonellaSensSpecDF <- make2x2(PCRtableProp, "Bartonella", 2e-04) # Before filtering
bartonellaSensSpecDF
sensitivityTest(bartonellaSensSpecDF)
specificityTest(bartonellaSensSpecDF)
bartonellaSensSpecDFfilt <- make2x2(PCRtableProp2, "Bartonella", 3e-04) # After filtering
bartonellaSensSpecDFfilt
sensitivityTest(bartonellaSensSpecDFfilt)
specificityTest(bartonellaSensSpecDFfilt)
rickettsiaSensSpecDF <- make2x2(PCRtableProp, "Rickettsia", 4e-04) # Before filtering
rickettsiaSensSpecDF
sensitivityTest(rickettsiaSensSpecDF)
specificityTest(rickettsiaSensSpecDF)
rickettsiaSensSpecDFfilt <- make2x2(PCRtableProp2, "Rickettsia", 2e-04) # after filtering
rickettsiaSensSpecDFfilt
sensitivityTest(rickettsiaSensSpecDFfilt)
specificityTest(rickettsiaSensSpecDFfilt)
wolbachiaSensSpecDF <- make2x2(PCRtableProp, "Wolbachia", 2e-04) # Before filtering
wolbachiaSensSpecDF
sensitivityTest(wolbachiaSensSpecDF)
specificityTest(wolbachiaSensSpecDF)
wolbachiaSensSpecDF <- make2x2(PCRtableProp2, "Wolbachia", 3e-04) # Before filtering
wolbachiaSensSpecDF
sensitivityTest(wolbachiaSensSpecDF)
specificityTest(wolbachiaSensSpecDF)
(15+16)/45
15+16
(15+16)/45
library(tidyverse)
library(phyloseq)
library(vegan)
source(file = "./Anderson_mult_pseudo_SE.R")
set.seed(100)
dataDir <- "/Users/hlberman/Google Drive File Stream/My Drive/Callahan Lab/bartonella_fleas/flea_microbiome"
load(file.path(dataDir, "/phyloseqObjectFleaFiltered.Rdata"))
psFlea3Prop <- transform_sample_counts(psFlea3, function(otu) otu/sum(otu))
df <- sample_data(psFlea3) %>%
data.frame(stringsAsFactors = FALSE)
shannonDF <- estimate_richness(psFlea3, measures="Shannon") %>%
data.frame() %>%
rownames_to_column(var="sampleID")
summary(shannonDF)
sd(shannonDF$Shannon)
power.t.test(delta=0.76, sd=0.76, sig.level=0.05, power=0.8, type="two.sample", alternative="two.sided")
otuDF <- psFlea3Prop %>%
psmelt %>%
select(sampleID, County, OTU, Abundance) %>%
spread(OTU, Abundance)
Y <- otuDF[,3:ncol(otuDF)]
Dists <-  vegdist(Y, method = "bray")
group.County = factor(otuDF$County)
# Get the result using a double-resampling approach...
output = MSEgroup.d(Dists, group.County, nresamp = 1000) # Double resampling is done here (this is a permuation followed by bootstrapping to estimate uncertainty)
# Now here is the plot: Figure 1(b)
ng = length(levels(group.County))
n.i = table(group.County)
nmax = max(n.i)
nudge = 0
mycol = c("black","gray47","gray83")
mypch = c(21,24,25)
plot(2:nmax, output$means[1,2:nmax], type = "n", main = "",
ylab = "Multivariate pseudo SE", xlab = "Sample size (n)", ylim = c(0,0.4), xlim = c(1,35), las=1)
for (i in 1:ng) {
arrows(2:n.i[i]+nudge, output$upper[i,2:n.i[i]],
2:n.i[i]+nudge, output$lower[i,2:n.i[i]],
length = 0.05, angle = 90, code = 3, col = "black")
points(2:n.i[i]+nudge, output$means[i,2:n.i[i]], pch = mypch[i], bg = mycol[i])
nudge = nudge + 0.25
}
legend(x = "topright", legend = c("Harnett", "San Fransisc", "Washington"), pch = mypch, pt.bg = mycol)
mean25 <- output$means["Washington", "25"]
mean26 <- output$means["Washington", "26"]
mean25-mean26
((mean25-mean26)/mean25)*100
library(phyloseq)
library(tidyverse)
library(decontam)
library(vegan)
library(RVAideMemoire)
set.seed(100)
str_detect2  <- function(string, pattern, default = F) {
coalesce(stringr::str_detect(string, pattern), default)
}
load(file.path("../", "phyloseqObjectFlea.Rdata"))
psFleaProp <- transform_sample_counts(psFlea, function(otu) otu/sum(otu))
contamDF <-  file.path("../ContaminantsList.csv") %>%
read_csv()
fleaDF <- sample_data(psFlea) %>%
data.frame(stringsAsFactors = FALSE)
psFleaMelted <- psFlea %>%
psmelt()
psFleaPropMelted <- psFleaProp %>%
psmelt
psFleaRare <- rarefy_even_depth(psFlea, sample.size = min(sample_sums(psFlea)), rngseed = FALSE, replace=TRUE, trimOTUs = TRUE, verbose=TRUE)
rarefyingTests <- map_df(c(base=psFlea, rarefied=psFleaRare, filtered=psFlea3), ~estimate_richness(.x, measures = "Observed")$Observed) %>%
mutate(sampleID=sample_names(psFlea)) %>%
select(sampleID, everything())
# assess sample sums before and after rarefyling
map_df(c(base=psFlea, rarefied=psFleaRare, filtered=psFlea3), sample_sums) %>%
mutate(sampleID=sample_names(psFlea)) %>%
select(sampleID, everything())
# assess sample sums before and after rarefyling
map_df(c(base=psFlea, rarefied=psFleaRare), sample_sums) %>%
mutate(sampleID=sample_names(psFlea)) %>%
select(sampleID, everything())
# assess sample sums before and after rarefyling
map_df(c(base=psFlea, rarefied=psFleaRare), sample_sums) %>%
mutate(sampleID=sample_names(psFlea)) %>%
select(sampleID, everything()) %>%
summary
#set paths
#repo_dir <- "/Users/hlberman/Documents/GitHub/pregnancy_metagenome/"
getwd
#set paths
#repo_dir <- "/Users/hlberman/Documents/GitHub/pregnancy_metagenome/"
getwd()
countsDFbowtie <- file.path("fastq_counts.txt") %>%
read_delim(delim="\ ")
library(tidyverse)
set.seed(7334)
sgDF <- "./Tables_4_Ben.txt" %>%
read_delim(delim="\t") %>%
dplyr::rename(SampleIndex=`Sample Index`,
SampleType=`Sample Type`,
SubjectID=Subject,
SampleID=`Sample ID`,
GDcoll=GD_Coll,
GWdell=GW_Dell,
TermPre=`Term/Pre`,
TotalReads=`Total reads`,
TotalPairs=`Total pairs`,
Sickle100_pe=`Sickle_100 (pe)`,
Sickle_pairs=Sickle_pe,
Human_pairs=Human_pe,
PctTrim=`Pct Trim`,
PctHuman=`Pct Human`) %>%
mutate(SampleID=as.character(SampleID),
SubjectID=as.character(SubjectID),
PctTrim=as.numeric(as.character(str_extract(PctTrim, ".*(?=\\%)")))/100,
PctHuman=as.numeric(as.character(str_extract(PctHuman, ".*(?=\\%)")))/100,
GWcoll=GDcoll/7,
SampleID_a=paste0(substr(SampleID, 1, 5), "01", substr(SampleID, 8, 10)),
RNAlater=case_when(str_detect(SampleID, "[0-9]{5}01[0-9]{3}")~"No",
str_detect(SampleID, "[0-9]{5}35[0-9]{3}")~"Yes"))
head(sgDF)
#sickle pairs == half of `Sickle100_pe`
sgDF %>%
select(Sickle100_pe, Sickle_pairs) %>%
mutate(test=Sickle_pairs*2,
TF=case_when(test==Sickle100_pe~TRUE,
test!=Sickle100_pe~FALSE)) %>%
.$TF %>%
table()
#Percent trimmed is Sickle 100 paired and single reads divided by total reads
sgDF %>%
select(TotalReads, Sickle100_pe, Sickle_sngl, PctTrim) %>%
mutate(test=as.character(round(((Sickle100_pe+Sickle_sngl)/TotalReads), 4)),
PctTrim=as.character(PctTrim),
TF=case_when(test==PctTrim~TRUE,
test!=PctTrim~FALSE)) %>%
.$TF %>%
table()
#Percent human is bowtie paired and single reads divided by total reads
sgDF %>%
select(Sickle100_pe, Sickle_pairs, Sickle_sngl, Human_pairs, Human_sngl,PctHuman) %>%
mutate(test=as.character(round((Human_pairs*2+Human_sngl)/(Sickle100_pe+Sickle_sngl),4)),
PctHuman=as.character(PctHuman),
TF=case_when(test==PctHuman~TRUE,
test!=PctHuman~FALSE)) %>%
.$TF %>%
table
PS15 <- "./sampledata_VaginalSwabs_Pregnancy_DiGiulio2015.tsv" %>%
read_tsv() %>%
dplyr::rename(GDcoll=GDColl) %>%
mutate(SubjectID= as.character(SubjectID),
Cohort="Stanford",
Method="Amplicon",
PaperCohort="2015") %>%
select(SampleID, SubjectID, GDcoll, Cohort, Method, PaperCohort)
PS17 <- "./MAP_MANUSCRIPT_IL02-IL09_ToBen_20170404_fixed.txt" %>%
read_delim(delim="\t") %>%
mutate(SubjectID= as.character(SubjectID),
Cohort=case_when(UAB_Sample==0~"Stanford",
UAB_Sample==1~"UAB"),
Method="Amplicon",
PaperCohort="2017") %>%
select(SampleID, SubjectID, GDcoll, Cohort, Method, PaperCohort)
AMP <- rbind(PS15, PS17) %>%
unique.data.frame()
sgDF0 <- sgDF %>%
left_join(AMP[,c("SubjectID", "Cohort", "PaperCohort")], by="SubjectID") %>%
filter(SampleID %in% sgDF$SampleID) %>%
mutate(Cohort=replace_na(Cohort,"Stanford")) %>%
unique.data.frame()
SHOT <- sgDF0 %>%
select(SubjectID, GDcoll, Cohort, PaperCohort) %>%
filter(PaperCohort=="2015"|PaperCohort=="2017") %>%
mutate(Method="Shotgun") %>%
unique.data.frame()
ggplot() +
geom_point(data=AMP, aes(x=GDcoll, y=as.character(SubjectID), shape=Method, color=Cohort, size=Method), alpha=.5) +
geom_point(data=SHOT, aes(x=GDcoll, y=as.character(SubjectID), shape=Method, size=Method), color="black") +
xlim(0,280) +
labs(x = "Gestation Days",
y = "Subject") +
scale_color_manual(values=c("olivedrab", "steelblue", "black"))+
scale_shape_manual(values=c(19, 15)) +
scale_size_manual(values=c(1,2)) +
#theme_classic()+
theme(axis.ticks.y = element_blank(),
#axis.text.x = element_text(size = 10),
axis.text.y  = element_blank()
#axis.title.x = element_text(size=20),
#axis.title.y = element_text(size=20)
)
#scale_x_continuous(breaks = c(0,50,100,150,200, 250))
#ggsave("./collectionPlot.svg", height=8, width=8.5)
sgDF1 <- sgDF0 %>%
group_by(SubjectID) %>%
mutate(sampleOrder=rank(GDcoll),
sampleTrimester=case_when(GDcoll<=97~"First",
GDcoll>=98&GDcoll<=195~"Second",
GDcoll>=196~"Third")) %>%
ungroup()
#save updated dataframe
write_tsv(sgDF1, "./shotgunMetadata.tsv")
sgDF1 %>%
filter(Cohort=="UAB")%>%
nrow()
sgDF1 %>%
filter(Cohort=="UAB") %>%
select(SubjectID) %>%
n_distinct()
sgDF1 %>%
filter(Cohort=="Stanford")%>%
nrow()
sgDF1 %>%
filter(Cohort=="Stanford") %>%
select(SubjectID) %>%
n_distinct()
range(sgDF1$GDcoll)
summary(sgDF1$GDcoll[sgDF1$sampleOrder==1])
summary(sgDF1$GDcoll[sgDF1$sampleOrder==2])
summary(sgDF1$GDcoll[sgDF1$sampleOrder==3])
sgDF1 %>%
ggplot(aes(x=sampleOrder, y=GDcoll, group=sampleOrder)) +
geom_boxplot() +
geom_point() +
facet_wrap(~Cohort) +
labs(x="Sample Order", y="Gestation Days at Collection")
sgDF1 %>%
ggplot(aes(x=GDcoll, y=as.character(SubjectID), color=Cohort)) +
geom_point() +
geom_vline(xintercept = 97.5)+
geom_vline(xintercept = 195.5) +
labs(x="Gestation Days at Collection", y="Subject ID")
#Create dataframe of subsets
sgDFsubset <- sgDF1 %>%
filter(sampleTrimester=="Second") %>%
group_by(SubjectID) %>%
sample_n(size=1) %>%
ungroup
sampleSubset <- sgDFsubset$SampleID
sampleSubset
#save list of subset
#write_lines(sampleSubset, "./sampleSubset.txt")
#what subject is missing a sample
setdiff(unique(sgDF$SubjectID), sgDFsubset$SubjectID)
summary(sgDFsubset$GDcoll)
#Create dataframe of subsets
sgDFsubset <- sgDF1 %>%
filter(sampleTrimester=="Second") %>%
group_by(SubjectID) %>%
sample_n(size=1) %>%
ungroup
sampleSubset <- sgDFsubset$SampleID
sampleSubset
#save list of subset
write_lines(sampleSubset, "./sampleSubset.txt")
#what subject is missing a sample
setdiff(unique(sgDF$SubjectID), sgDFsubset$SubjectID)
#set paths
getwd()
countsDFbowtie <- file.path("fastq_counts.txt") %>%
read_delim(delim="\ ")
countsDFbbmapOLD <- file.path("fastq_counts_bbmapX.txt") %>%
read_delim(delim="\ ")
countsDFbbmapNEW <- file.path("fastq_counts_bbmap.txt") %>%
read_delim(delim="\ ")
bbmapCompare <- countsDFbbmapOLD %>%
left_join(countsDFbbmapNEW, by="Sample") %>%
select(Sample, filteredCount1.x, filteredCount1.y) %>%
dplyr::rename(old=filteredCount1.x,
new=filteredCount1.y) %>%
mutate(new=new/4,
old=old/4,
diff=new-old)
summary(bbmapCompare$diff)
sgDF <- file.path("..", "metadata", "shotgunMetadata.tsv") %>%
read_tsv()
krakenReads <- file.path("..", "methods_comparisons", "assess_kraken", "krakenHumanReads.tsv") %>%
read_tsv()
#bowtie by HLB counts
countsDhbBowtieF0 <- countsDFbowtie %>%
mutate(uploadCount1=uploadCount1/4,
uploadCount2=uploadCount2/4,
uploadCountS=uploadCountS/4,
filteredCount1=filteredCount1/4,
filteredCount2=filteredCount2/4,
filteredCountS=filteredCountS/4,
uploadTotal=uploadCount1+uploadCount2, #+uploadCountS,
filteredTotalBowtie=filteredCount1+filteredCount2, #+filteredCountS,
pctFilteredBowtie=filteredTotalBowtie/uploadTotal,
pctHumanBowtie=(uploadTotal-filteredTotalBowtie)/uploadTotal,
SampleID=Sample)
#bbmap by HLB counts
countsDFbbmap0 <- countsDFbbmap %>%
mutate(uploadCount1=uploadCount1/4,
uploadCount2=uploadCount2/4,
uploadCountS=uploadCountS/4,
filteredCount1=filteredCount1/4,
filteredCount2=filteredCount2/4,
filteredCountS=filteredCountS/4,
uploadTotal=uploadCount1+uploadCount2,  #+uploadCountS,
filteredTotalBbmap=filteredCount1+filteredCount2,  #+filteredCountS,
pctFilteredBbmap=filteredTotalBbmap/uploadTotal,
pctHumanBbmap=(uploadTotal-filteredTotalBbmap)/uploadTotal,
SampleID=Sample)
#set paths
getwd()
countsDFbowtie <- file.path("fastq_counts.txt") %>%
read_delim(delim="\ ")
#countsDFbbmapOLD <- file.path("fastq_counts_bbmapX.txt") %>%
#  read_delim(delim="\ ")
countsDFbbmap <- file.path("fastq_counts_bbmap.txt") %>%
read_delim(delim="\ ")
bbmapCompare <- countsDFbbmapOLD %>%
left_join(countsDFbbmap, by="Sample") %>%
select(Sample, filteredCount1.x, filteredCount1.y) %>%
dplyr::rename(old=filteredCount1.x,
new=filteredCount1.y) %>%
mutate(new=new/4,
old=old/4,
diff=new-old)
summary(bbmapCompare$diff)
sgDF <- file.path("..", "metadata", "shotgunMetadata.tsv") %>%
read_tsv()
krakenReads <- file.path("..", "methods_comparisons", "assess_kraken", "krakenHumanReads.tsv") %>%
read_tsv()
#set paths
getwd()
countsDFbowtie <- file.path("fastq_counts.txt") %>%
read_delim(delim="\ ")
#countsDFbbmapOLD <- file.path("fastq_counts_bbmapX.txt") %>%
#  read_delim(delim="\ ")
countsDFbbmap <- file.path("fastq_counts_bbmap.txt") %>%
read_delim(delim="\ ")
#bbmapCompare <- countsDFbbmapOLD %>%
#  left_join(countsDFbbmap, by="Sample") %>%
#  select(Sample, filteredCount1.x, filteredCount1.y) %>%
#  dplyr::rename(old=filteredCount1.x,
#                new=filteredCount1.y) %>%
#  mutate(new=new/4,
#         old=old/4,
#    diff=new-old)
#summary(bbmapCompare$diff)
sgDF <- file.path("..", "metadata", "shotgunMetadata.tsv") %>%
read_tsv()
krakenReads <- file.path("..", "methods_comparisons", "assess_kraken", "krakenHumanReads.tsv") %>%
read_tsv()
#bowtie by HLB counts
countsDhbBowtieF0 <- countsDFbowtie %>%
mutate(uploadCount1=uploadCount1/4,
uploadCount2=uploadCount2/4,
uploadCountS=uploadCountS/4,
filteredCount1=filteredCount1/4,
filteredCount2=filteredCount2/4,
filteredCountS=filteredCountS/4,
uploadTotal=uploadCount1+uploadCount2, #+uploadCountS,
filteredTotalBowtie=filteredCount1+filteredCount2, #+filteredCountS,
pctFilteredBowtie=filteredTotalBowtie/uploadTotal,
pctHumanBowtie=(uploadTotal-filteredTotalBowtie)/uploadTotal,
SampleID=Sample)
#bbmap by HLB counts
countsDFbbmap0 <- countsDFbbmap %>%
mutate(uploadCount1=uploadCount1/4,
uploadCount2=uploadCount2/4,
uploadCountS=uploadCountS/4,
filteredCount1=filteredCount1/4,
filteredCount2=filteredCount2/4,
filteredCountS=filteredCountS/4,
uploadTotal=uploadCount1+uploadCount2,  #+uploadCountS,
filteredTotalBbmap=filteredCount1+filteredCount2,  #+filteredCountS,
pctFilteredBbmap=filteredTotalBbmap/uploadTotal,
pctHumanBbmap=(uploadTotal-filteredTotalBbmap)/uploadTotal,
SampleID=Sample)
sgDF0 <- sgDF %>%
select(SampleID, PctHuman) %>%
dplyr::rename(Upload=PctHuman) %>%
left_join(., countsDhbBowtieF0[,c("SampleID", "pctHumanBowtie")], by="SampleID") %>%
left_join(., countsDFbbmap0[,c("SampleID", "pctHumanBbmap")], by="SampleID") %>%
left_join(., krakenReads[,c("SampleID", "krakenHuAbundance")], by ="SampleID") %>%
dplyr::rename(Kraken=krakenHuAbundance, BBmap=pctHumanBbmap, Bowtie=pctHumanBowtie) %>%
gather("Method", "PctHuman", 2:ncol(.))
ggplot(sgDF0) +
geom_line(aes(x=as.character(SampleID), y=PctHuman, color=Method, group=Method), show.legend = TRUE) +
theme(axis.text.x = element_blank())+
labs(x="Sample", y="Proportion Human Reads") +
scale_color_manual(values=c("black", "red", "blue", "darkgreen"))
#ggsave("/Volumes/GoogleDrive/My Drive/Callahan Lab/vagMicrobiomeMetagenome/filter_host/filterHuman.pdf")
test <- read_tsv(file.path("..", "metadata", "shotgunMetadata.tsv"))
View(test)
remove(test)
