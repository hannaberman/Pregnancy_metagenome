logSD=log(sd)) %>%
ggplot(data=., aes(y=logSD, x=logMean))+
geom_point() +
geom_smooth(method = "lm", se=FALSE)+
labs(x="log(mean) estimates", y= "log(sd) estimates")
library(ggpubr)
data_4 %>%
group_by(Tx) %>%
summarise_all(list(mean=mean,sd=sd))%>%
mutate(logMean=log(mean),
logSD=log(sd)) %>%
ggplot(data=., aes(y=logSD, x=logMean))+
geom_point() +
geom_smooth(method = "lm", se=FALSE)+
labs(x="log(mean) estimates", y= "log(sd) estimates")+
stat_regline_equation(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), label.y = -5, na.rm = TRUE, formula=y~x)
data_4 %>%
group_by(Tx) %>%
summarise_all(list(mean=mean,sd=sd))%>%
mutate(logMean=log(mean),
logSD=log(sd)) %>%
ggplot(data=., aes(y=logSD, x=logMean))+
geom_point() +
geom_smooth(method = "lm", se=FALSE)+
labs(x="log(mean) estimates", y= "log(sd) estimates")+
stat_regline_equation(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), label.y = -5, na.rm = TRUE, formula=y~x))
data_4 %>%
group_by(Tx) %>%
summarise_all(list(mean=mean,sd=sd))%>%
mutate(logMean=log(mean),
logSD=log(sd)) %>%
ggplot(data=., aes(y=logSD, x=logMean))+
geom_point() +
geom_smooth(method = "lm", se=FALSE)+
labs(x="log(mean) estimates", y= "log(sd) estimates")+
stat_regline_equation(aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), label.y = -5, na.rm = TRUE, formula=y~x)
data_4 %>%
group_by(Tx) %>%
summarise_all(list(mean=mean,sd=sd))%>%
mutate(logMean=log(mean),
logSD=log(sd)) %>%
ggplot(data=., aes(y=logSD, x=logMean))+
geom_point() +
geom_smooth(method = "lm", se=FALSE)+
labs(x="log(mean) estimates", y= "log(sd) estimates")+
stat_regline_equation(aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), label.y = 1, na.rm = TRUE, formula=y~x)
data_4 %>%
mutate(sqY=sqrt(Y))
aov_4c <- data_4 %>%
mutate(sqY=sqrt(Y)) %>%
aov(data=., sqY~Tx)
summary(aov_4c)
cbind(Residuals=aov_4c$residuals,
FittedValues=aov_4c$fitted.values) %>%
as_data_frame()%>%
ggplot(aes(y=Residuals, x=FittedValues))+
labs(x="Fitted Values", y="Residuals")
aov_4 <- data_4 %>%
aov(data=., Y~Tx)
summary(aov_4)
data_frame(Residuals=aov_4$residuals, FittedValues=aov_4$fitted.values)%>%
ggplot(data=., aes(y=Residuals, x=FittedValues)) +
geom_point() +
labs(title = "Residuals vs. Fitted Values", x="Fitted Values", y="Residuals")
aov_4c <- data_4 %>%
mutate(sqY=sqrt(Y)) #%>%
View(aov_4c)
aov_4c <- data_4 %>%
mutate(sqY=sqrt(Y)) %>%
aov(data=., sqY~Tx)
summary(aov_4c)
aov_4c <- data_4 %>%
mutate(sqrtY=sqrt(Y)) %>%
aov(data=., sqrtY~Tx)
summary(aov_4c)
data_frame(Residuals=aov_4c$residuals,
FittedValues=aov_4c$fitted.values) %>%
ggplot(aes(y=Residuals, x=FittedValues))+
labs(x="Fitted Values", y="Residuals")
aov_4c <- data_4 %>%
mutate(sqrtY=sqrt(Y)) %>%
aov(data=., sqrtY~Tx)
summary(aov_4c)
data_frame(Residuals=aov_4c$residuals,
FittedValues=aov_4c$fitted.values) %>%
ggplot(aes(y=Residuals, x=FittedValues))+
geom_point()+
labs(x="Fitted Values", y="Residuals")
aov_4c <- data_4 %>%
mutate(sqrtY=sqrt(Y)) %>%
aov(data=., sqrtY~Tx)
summary(aov_4c)
data_frame(Residuals=aov_4c$residuals,
FittedValues=aov_4c$fitted.values) %>%
ggplot(aes(y=Residuals, x=FittedValues))+
geom_point()+
labs(x="Fitted Values", y="Residuals")
data_30 <- data_3 %>%
mutate(Age=as.factor(Age))
base::levels(data_30$Age)
data_30 <- data_3 %>%
mutate(Age=as.factor(Age))
base::levels(data_30$Age)
contrasts(data_30$Age) <- c(-1,0.5,0.5)
aov(data=data_30, Offer~Age) %>%
summary.aov(., split=list(Tx=list("Elderly"=1, "Young and Middle Age" = 2)))
data_30 <- data_3 %>%
mutate(Age=as.factor(Age))
base::levels(data_30$Age)
contrasts(data_30$Age) <- c(-1,0.5,0.5)
aov(data=data_30, Offer~Age) %>%
summary.aov(., split=list(Age=list("Elderly"=1, "Young and Middle Age" = 2)))
aov(data=data_30, Offer~Age) %>%
summary.aov(.) #split=list(Age=list("Elderly"=1, "Young and Middle Age" = 2)))
data_30 <- data_3 %>%
mutate(Age=as.factor(Age))
base::levels(data_30$Age)
contrasts(data_30$Age) <- c(-1,0.5,0.5)
aov(data=data_30, Offer~Age) %>%
summary.aov(., split=list(Age=list("Elderly vs. young and middle-aged")))
data_30 <- data_3 %>%
mutate(Age=as.factor(Age))
base::levels(data_30$Age)
contrasts(data_30$Age) <- c(-1,0.5,0.5)
aov(data=data_30, Offer~Age) %>%
summary.aov(., split=list(Age=list("Elderly vs. young and middle-aged"=1)))
data_30 <- data_3 %>%
mutate(Age=as.factor(Age))
base::levels(data_30$Age)
contrasts(data_30$Age) <- c(-1,0.5,0.5)
aov(data=data_30, Offer~Age) %>%
summary.aov(., split=list(Age=list("Elderly vs. young and middle-aged"=1)))
data_30 <- data_3 %>%
mutate(Age=as.factor(Age))
base::levels(data_30$Age)
contrasts(data_30$Age) <- c(-1,0.5,0.5)
aov(data=data_30, Offer~Age) %>%
summary.aov(., split=list(Age="Elderly vs. young and middle-aged"))
data_30 <- data_3 %>%
mutate(Age=as.factor(Age))
base::levels(data_30$Age)
contrasts(data_30$Age) <- c(-1,0.5,0.5)
aov(data=data_30, Offer~Age) %>%
summary.aov(., split=list(Age=list("Elderly vs. young and middle-aged"=1)))
data_3 %>%
aov(data=., Offer~Age) %>%
summary()
data_30 <- data_3 %>%
mutate(Age=as.factor(Age))
base::levels(data_30$Age)
contrasts(data_30$Age) <- c(-1,0.5,0.5)
aov(data=data_30, Offer~Age) %>%
summary.aov(., split=list(Age=list("Elderly vs. young and middle-aged"=1)))
base::levels(data_30$Age)
aov_4 <- data_4 %>%
aov(data=., Y~Tx)
summary(aov_4)
data_frame(Residuals=aov_4$residuals, FittedValues=aov_4$fitted.values)%>%
ggplot(data=., aes(y=Residuals, x=FittedValues)) +
geom_point() +
labs(title = "Residuals vs. Fitted Values", x="Fitted Values", y="Residuals")
data_4 %>%
group_by(Tx) %>%
summarise_all(list(mean=mean,sd=sd))%>%
mutate(logMean=log(mean),
logSD=log(sd)) %>%
ggplot(data=., aes(y=logSD, x=logMean))+
geom_point() +
geom_smooth(method = "lm", se=FALSE)+
labs(x="log(mean) estimates", y= "log(sd) estimates")+
stat_regline_equation(aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), label.y = 1, na.rm = TRUE, formula=y~x)
aov_4c <- data_4 %>%
mutate(sqrtY=sqrt(Y)) %>%
aov(data=., sqrtY~Tx)
summary(aov_4c)
data_frame(Residuals=aov_4c$residuals,
FittedValues=aov_4c$fitted.values) %>%
ggplot(aes(y=Residuals, x=FittedValues))+
geom_point()+
labs(x="Fitted Values", y="Residuals")
data_30 <- data_3 %>%
mutate(Age=as.factor(Age))
base::levels(data_30$Age)
contrasts(data_30$Age) <- c(-1,0.5,0.5)
aov(data=data_30, Offer~Age) %>%
summary.aov(., split=list(Age=list("Elderly vs. young and middle-aged"=1)))
repo_dir <- "/Users/hlberman/Documents/GitHub/pregnancy_metagenome/"
gard_tree_dir <- "/Volumes/GoogleDrive/My Drive/Callahan Lab/Gard WGS"
output_dir <- file.path(repo_dir, "gard_mapping/clade_assignments/")
df_path <- file.path(repo_dir, "shotgunMetadata.tsv")
ref_df_path <- file.path(repo_dir, "GardnerellaMetadata.csv")
fastq_20_path <- "/Users/hlberman/mnt/cluster/home/hlberman/VMMG/gard_map/filtered_fastq_20"
fastq_42_path <- "/Users/hlberman/mnt/cluster/home/hlberman/VMMG/gard_map/filtered_fastq_42"
ref_db_path <- file.path(repo_dir, "gard_mapping/clade_assignments/ref_genes/refGenes.fasta")
refGenesDF_path <- file.path(repo_dir, "gard_mapping/clade_assignments/ref_genes/refGenesDF.csv")
fastq_20_filesp <- list.files(path=fastq_20_path, all.files = FALSE, full.names = TRUE, pattern = "_1.fastq.gz")
fastq_42_filesp <- list.files(path=fastq_42_path, all.files = FALSE, full.names = TRUE, pattern = "_1.fastq.gz")
fastq_20_filess <- list.files(path=fastq_20_path, all.files = FALSE, full.names = TRUE, pattern = "_S.fastq.gz")
fastq_42_filess <- list.files(path=fastq_42_path, all.files = FALSE, full.names = TRUE, pattern = "_S.fastq.gz")
fastq_20p <- lapply(fastq_20_filesp, readDNAStringSet, format="fastq")
library(tidyverse); packageVersion("tidyverse")
#library(GenomicAlignments);packageVersion("GenomicAlignments")
library(Biostrings)
fastq_20_filesp <- list.files(path=fastq_20_path, all.files = FALSE, full.names = TRUE, pattern = "_1.fastq.gz")
fastq_42_filesp <- list.files(path=fastq_42_path, all.files = FALSE, full.names = TRUE, pattern = "_1.fastq.gz")
fastq_20_filess <- list.files(path=fastq_20_path, all.files = FALSE, full.names = TRUE, pattern = "_S.fastq.gz")
fastq_42_filess <- list.files(path=fastq_42_path, all.files = FALSE, full.names = TRUE, pattern = "_S.fastq.gz")
fastq_20p <- lapply(fastq_20_filesp, readDNAStringSet, format="fastq")
names(fastq_20p) <- list.files(path=fastq_20_path, all.files = FALSE, full.names = FALSE, pattern = "_1.fastq.gz") %>%
str_extract(pattern="[0-9]+(?=_FgardRef_1.fastq.gz)")
fastq_20s <- lapply(fastq_20_filess, readDNAStringSet, format="fastq")
names(fastq_20s) <- list.files(path=fastq_20_path, all.files = FALSE, full.names = FALSE, pattern = "_S.fastq.gz") %>%
str_extract(pattern="[0-9]+(?=_FgardRef_1.fastq.gz)")
fastq_42p <- lapply(fastq_42_filesp, readDNAStringSet, format="fastq")
names(fastq_42p) <- list.files(path=fastq_42_path, all.files = FALSE, full.names = FALSE, pattern = "_1.fastq.gz") %>%
str_extract(pattern="[0-9]+(?=_FgardRef_1.fastq.gz)")
fastq_42s <- lapply(fastq_42_filess, readDNAStringSet, format="fastq")
names(fastq_42s) <- list.files(path=fastq_42_path, all.files = FALSE, full.names = FALSE, pattern = "_S.fastq.gz") %>%
str_extract(pattern="[0-9]+(?=_FgardRef_1.fastq.gz)")
n_df <- data.frame(n20p=sapply(fastq_20p, length),
n20s=sapply(fastq_20s, length),
n42p=sapply(fastq_42p, length),
n42s=sapply(fastq_42s, length)) %>%
mutate(SampleID=rownames(.),
n20=n20p*2+n20s,
n42=n42p*2+n42s)
sapply(list(n20_pairs=n_df$n20p, n42_pairs=n_df$n42p, n20_singles=n_df$n20s, n42_singles=n_df$n42s, n20_total=n_df$n20, n42_total=n_df$n42), summary)
length(n_df$n20==0)
length(n_df$n42==0)
n_df0 <- n_df %>%
select(SampleID, n20, n42) %>%
gather("Threshold", "n", 2:3)
ggplot(data=n_df0, aes(y=n_df0$n, x=Threshold)) +
geom_jitter() +
labs(y="reads") +
geom_boxplot(alpha=0)
view(n_df)
library(tidyverse)
library(Biostrings)
library(BiocParallel)
#set paths
repo_dir <- "/Users/hlberman/Documents/GitHub/pregnancy_metagenome/"
countsDF_path <- file.path(repo_dir, "filter_host", "fastq_counts.txt")
countsDFbbmap_path <- file.path(repo_dir, "filter_host", "fastq_counts_bbmap.txt")
sg_df_path <- file.path(repo_dir, "shotgunMetadata.tsv")
krakenReads <- read_delim(file.path(repo_dir, "methods_comparisons", "assess_kraken", "krakenHumanReads.tsv"), delim="\t")
#Load
sg_df <- read_delim(sg_df_path, delim = "\t")
countsDF <- read_delim(countsDF_path, delim="\ ")
countsDFbbmap <- read_delim(countsDFbbmap_path, delim="\ ")
remove(sg_df)
#set paths
repo_dir <- "/Users/hlberman/Documents/GitHub/pregnancy_metagenome/"
countsDF_path <- file.path(repo_dir, "filter_host", "fastq_counts.txt")
countsDFbbmap_path <- file.path(repo_dir, "filter_host", "fastq_counts_bbmap.txt")
sgDF_path <- file.path(repo_dir, "shotgunMetadata.tsv")
krakenReads <- read_delim(file.path(repo_dir, "methods_comparisons", "assess_kraken", "krakenHumanReads.tsv"), delim="\t")
#Load
sgDF <- read_delim(sgDF_path, delim = "\t")
countsDF <- read_delim(countsDF_path, delim="\ ")
countsDFbbmap <- read_delim(countsDFbbmap_path, delim="\ ")
setdiff(countsDFbbmap$Sample, sgDF$SampleID)
countsDFbbmap$Sample
setdiff(sgDF$SampleID, countsDFbbmap$Sample)
#set paths
repo_dir <- "/Users/hlberman/Documents/GitHub/pregnancy_metagenome/"
countsDF_path <- file.path(repo_dir, "filter_host", "fastq_counts.txt")
countsDFbbmap_path <- file.path(repo_dir, "filter_host", "fastq_counts_bbmap.txt")
sgDF_path <- file.path(repo_dir, "shotgunMetadata.tsv")
krakenReads <- read_delim(file.path(repo_dir, "methods_comparisons", "assess_kraken", "krakenHumanReads.tsv"), delim="\t")
#Load
sgDF <- read_delim(sgDF_path, delim = "\t")
countsDF <- read_delim(countsDF_path, delim="\ ")
countsDFbbmap <- read_delim(countsDFbbmap_path, delim="\ ")
countsDF0 <- countsDF %>%
mutate(uploadCount1=uploadCount1/4,
uploadCount2=uploadCount2/4,
uploadCountS=uploadCountS/4,
filteredCount1=filteredCount1/4,
filteredCount2=filteredCount2/4,
filteredCountS=filteredCountS/4,
uploadTotal=uploadCount1+uploadCount2+uploadCountS,
filteredTotal=filteredCount1+filteredCount2+filteredCountS,
pctFiltered=filteredTotal/uploadTotal,
pctHuman2=(uploadTotal-filteredTotal)/uploadTotal,
SampleID=Sample)
countsDFbbmap0 <- countsDFbbmap %>%
select(Sample, filteredCount1, filteredCount2, filteredCountS)
countsDFbbmap0 <- countsDFbbmap %>%
select(Sample, filteredCount1, filteredCount2, filteredCountS) %>%
mutate(filteredCount1=filteredCount1/4,
filteredCount2=filteredCount2/4,
filteredCountS=filteredCountS/4,
uploadTotal=uploadCount1+uploadCount2+uploadCountS,
filteredTotal=filteredCount1+filteredCount2+filteredCountS,
pctFiltered=filteredTotal/uploadTotal,
pctHuman3=(uploadTotal-filteredTotal)/uploadTotal,
SampleID=Sample)
sg_df0 <- sg_df %>%
select(SampleID, PctHuman) %>%
left_join(., countsDF0[,c("SampleID", "pctHumanBowtie")], by="SampleID") %>%
left_join(., countsDFbbmap0[,c("SampleID", "pctHumanBbmap")]) %>%
left_join(., krakenReads[,c("SampleID", "krakenHuAbundance")], by ="SampleID") #%>%
countsDF0 <- countsDF %>%
mutate(uploadCount1=uploadCount1/4,
uploadCount2=uploadCount2/4,
uploadCountS=uploadCountS/4,
filteredCount1=filteredCount1/4,
filteredCount2=filteredCount2/4,
filteredCountS=filteredCountS/4,
uploadTotal=uploadCount1+uploadCount2+uploadCountS,
filteredTotalBowtie=filteredCount1+filteredCount2+filteredCountS,
pctFilteredBowtie=filteredTotal/uploadTotal,
pctHumanBowtie=(uploadTotal-filteredTotal)/uploadTotal,
SampleID=Sample)
countsDF0 <- countsDF %>%
mutate(uploadCount1=uploadCount1/4,
uploadCount2=uploadCount2/4,
uploadCountS=uploadCountS/4,
filteredCount1=filteredCount1/4,
filteredCount2=filteredCount2/4,
filteredCountS=filteredCountS/4,
uploadTotal=uploadCount1+uploadCount2+uploadCountS,
filteredTotalBowtie=filteredCount1+filteredCount2+filteredCountS,
pctFilteredBowtie=filteredTotalBowtie/uploadTotal,
pctHumanBowtie=(uploadTotal-filteredTotalBowtie)/uploadTotal,
SampleID=Sample)
countsDFbbmap0 <- countsDFbbmap %>%
mutate(uploadCount1=uploadCount1/4,
uploadCount2=uploadCount2/4,
uploadCountS=uploadCountS/4,
filteredCount1=filteredCount1/4,
filteredCount2=filteredCount2/4,
filteredCountS=filteredCountS/4,
uploadTotal=uploadCount1+uploadCount2+uploadCountS,
filteredTotalBbmap=filteredCount1+filteredCount2+filteredCountS,
pctFilteredBbmap=filteredTotalBbmap/uploadTotal,
pctHumanBbmap=(uploadTotal-filteredTotalBbmap)/uploadTotal,
SampleID=Sample)
sgDF0 <- sgDF %>%
select(SampleID, PctHuman) %>%
left_join(., countsDF0[,c("SampleID", "pctHumanBowtie")], by="SampleID") %>%
left_join(., countsDFbbmap0[,c("SampleID", "pctHumanBbmap")]) %>%
left_join(., krakenReads[,c("SampleID", "krakenHuAbundance")], by ="SampleID") #%>%
View(sgDF0)
sgDF0 <- sgDF %>%
select(SampleID, PctHuman) %>%
dplyr::rename(PctHumanUpload=PctHuman) %>%
left_join(., countsDF0[,c("SampleID", "pctHumanBowtie")], by="SampleID") %>%
left_join(., countsDFbbmap0[,c("SampleID", "pctHumanBbmap")]) %>%
left_join(., krakenReads[,c("SampleID", "krakenHuAbundance")], by ="SampleID") %>%
gather("Method", "PctFiltered", 2:ncol(.))
sgDF0 <- sgDF %>%
select(SampleID, PctHuman) %>%
dplyr::rename(PctHumanUpload=PctHuman) %>%
left_join(., countsDF0[,c("SampleID", "pctHumanBowtie")], by="SampleID") %>%
left_join(., countsDFbbmap0[,c("SampleID", "pctHumanBbmap")], by="SampleID") %>%
left_join(., krakenReads[,c("SampleID", "krakenHuAbundance")], by ="SampleID") %>%
gather("Method", "PctHuman", 2:ncol(.))
ggplot(sgDF0) +
geom_line(aes(x=as.character(SampleID), y=PctHuman, color=Method), show.legend = TRUE) +
theme(axis.text.x = element_blank())+
labs(title ="black:upload, red:Hanna Bowtie, blue:kraken", x="Sample", y="Proportion Human Reads")
ggplot(sgDF0) +
geom_line(aes(x=as.character(SampleID), y=PctHuman, color=Method, group=1), show.legend = TRUE) +
theme(axis.text.x = element_blank())+
labs(title ="black:upload, red:Hanna Bowtie, blue:kraken", x="Sample", y="Proportion Human Reads")
ggplot(sgDF0) +
geom_line(aes(x=as.character(SampleID), y=PctHuman, color=Method, group=1), show.legend = TRUE) +
theme(axis.text.x = element_blank())+
labs(x="Sample", y="Proportion Human Reads", color=c("Kraken", "BBmap", "Bowtie-HLB", "Bowtie-upload"))
ggsave("/Volumes/GoogleDrive/My Drive/Callahan Lab/vagMicrobiomeMetagenome/filter_host/filterHuman.pdf")
ggsave("/Volumes/GoogleDrive/My Drive/Callahan Lab/vagMicrobiomeMetagenome/filter_host/filterHuman.pdf", height = 7, width = 10)
ggplot(sgDF0) +
geom_line(aes(x=as.character(SampleID), y=PctHuman, color=Method, group=1), show.legend = TRUE) +
theme(axis.text.x = element_blank())+
labs(x="Sample", y="Proportion Human Reads", color=c("Kraken", "BBmap", "Bowtie-HLB", "Bowtie-upload"))
#bowtie by HLB counts
countsDF0 <- countsDF %>%
mutate(uploadCount1=uploadCount1/4,
uploadCount2=uploadCount2/4,
uploadCountS=uploadCountS/4,
filteredCount1=filteredCount1/4,
filteredCount2=filteredCount2/4,
filteredCountS=filteredCountS/4,
uploadTotal=uploadCount1+uploadCount2+uploadCountS,
filteredTotalBowtie=filteredCount1+filteredCount2+filteredCountS,
pctFilteredBowtie=filteredTotalBowtie/uploadTotal,
pctHumanBowtie=(uploadTotal-filteredTotalBowtie)/uploadTotal,
SampleID=Sample)
#bbmap by HLB counts
countsDFbbmap0 <- countsDFbbmap %>%
mutate(uploadCount1=uploadCount1/4,
uploadCount2=uploadCount2/4,
uploadCountS=uploadCountS/4,
filteredCount1=filteredCount1/4,
filteredCount2=filteredCount2/4,
filteredCountS=filteredCountS/4,
uploadTotal=uploadCount1+uploadCount2+uploadCountS,
filteredTotalBbmap=filteredCount1+filteredCount2+filteredCountS,
pctFilteredBbmap=filteredTotalBbmap/uploadTotal,
pctHumanBbmap=(uploadTotal-filteredTotalBbmap)/uploadTotal,
SampleID=Sample)
sgDF0 <- sgDF %>%
select(SampleID, PctHuman) %>%
dplyr::rename(Upload=PctHuman) %>%
left_join(., countsDF0[,c("SampleID", "pctHumanBowtie")], by="SampleID") %>%
left_join(., countsDFbbmap0[,c("SampleID", "pctHumanBbmap")], by="SampleID") %>%
left_join(., krakenReads[,c("SampleID", "krakenHuAbundance")], by ="SampleID") %>%
dplyr::rename(Kraken=krakenHuAbundance, BBmap=pctHumanBbmap, Bowtie=pctHumanBowtie) %>%
gather("Method", "PctHuman", 2:ncol(.))
ggplot(sgDF0) +
geom_line(aes(x=as.character(SampleID), y=PctHuman, color=Method, group=1), show.legend = TRUE) +
theme(axis.text.x = element_blank())+
labs(x="Sample", y="Proportion Human Reads", color=c("Kraken", "BBmap", "Bowtie-HLB", "Bowtie-upload"))
ggsave("/Volumes/GoogleDrive/My Drive/Callahan Lab/vagMicrobiomeMetagenome/filter_host/filterHuman.pdf", height = 7, width = 10)
ggplot(sgDF0) +
geom_line(aes(x=as.character(SampleID), y=PctHuman, color=Method, group=1), show.legend = TRUE) +
theme(axis.text.x = element_blank())+
labs(x="Sample", y="Proportion Human Reads")
ggplot(sgDF0) +
geom_line(aes(x=as.character(SampleID), y=PctHuman, color=Method, group=1), show.legend = TRUE) +
theme(axis.text.x = element_blank())+
labs(x="Sample", y="Proportion Human Reads") +
scale_color_manual(c("black", "red", "blue", "darkgreen"))
?scale_fill_manual
ggplot(sgDF0) +
geom_line(aes(x=as.character(SampleID), y=PctHuman, color=Method, group=1), show.legend = TRUE) +
theme(axis.text.x = element_blank())+
labs(x="Sample", y="Proportion Human Reads") +
scale_color_manual(values=c("black", "red", "blue", "darkgreen"))
ggplot(sgDF0) +
geom_line(aes(x=as.character(SampleID), y=PctHuman, color=Method, group=1), show.legend = TRUE) +
theme(axis.text.x = element_blank())+
labs(x="Sample", y="Proportion Human Reads") +
scale_color_manual(values=c("black", "red", "blue", "olivegreen"))
ggplot(sgDF0) +
geom_line(aes(x=as.character(SampleID), y=PctHuman, color=Method, group=1), show.legend = TRUE) +
theme(axis.text.x = element_blank())+
labs(x="Sample", y="Proportion Human Reads") +
scale_color_manual(values=c("black", "red", "blue", "green"))
ggplot(sgDF0) +
geom_line(aes(x=as.character(SampleID), y=PctHuman, color=Method, group=1), show.legend = TRUE) +
theme(axis.text.x = element_blank())+
labs(x="Sample", y="Proportion Human Reads") +
scale_color_manual(values=c("black", "red", "blue", "lightgreen"))
ggplot(sgDF0) +
geom_line(aes(x=as.character(SampleID), y=PctHuman[sgDF0$Method==BBmap], color=Method, group=1), show.legend = TRUE) +
theme(axis.text.x = element_blank())+
labs(x="Sample", y="Proportion Human Reads") +
scale_color_manual(values=c("black", "red", "blue", "lightgreen"))
ggplot(sgDF0) +
geom_line(aes(x=as.character(SampleID), y=PctHuman[sgDF0$Method=="BBmap"], color=Method, group=1), show.legend = TRUE) +
theme(axis.text.x = element_blank())+
labs(x="Sample", y="Proportion Human Reads") +
scale_color_manual(values=c("black", "red", "blue", "lightgreen"))
length(unique(countcountsDFbbmap$Sample))
length(unique(countsDFbbmap$Sample))
ggplot(sgDF0) +
geom_line(aes(x=as.character(SampleID), y=PctHuman, color=Method, group=1), show.legend = TRUE) +
theme(axis.text.x = element_blank())+
labs(x="Sample", y="Proportion Human Reads") +
scale_color_manual(values=c("black", "red", "blue", "lightgreen"))
ggplot(sgDF0) +
geom_line(aes(x=as.character(SampleID), y=PctHuman, color=Method, group=1), show.legend = TRUE) +
theme(axis.text.x = element_blank())+
labs(x="Sample", y="Proportion Human Reads") +
scale_color_manual(values=c("black", "red", "blue", "darkgreen"))
ggplot(sgDF0[sgDF0$Method!="Bowtie"]) +
geom_line(aes(x=as.character(SampleID), y=PctHuman, color=Method, group=1), show.legend = TRUE) +
theme(axis.text.x = element_blank())+
labs(x="Sample", y="Proportion Human Reads") +
scale_color_manual(values=c("black", "red", "blue", "darkgreen"))
ggplot(sgDF0[sgDF0$Method!="Bowtie"]) +
geom_line(aes(x=as.character(SampleID), y=PctHuman, color=Method, group=1), show.legend = TRUE) +
theme(axis.text.x = element_blank())+
labs(x="Sample", y="Proportion Human Reads")
ggplot(sgDF0["Method"!="Bowtie",]) +
geom_line(aes(x=as.character(SampleID), y=PctHuman, color=Method, group=1), show.legend = TRUE) +
theme(axis.text.x = element_blank())+
labs(x="Sample", y="Proportion Human Reads")
ggplot(sgDF0) +
geom_line(aes(x=as.character(SampleID), y=PctHuman, color=Method, group=1), show.legend = TRUE) +
theme(axis.text.x = element_blank())+
labs(x="Sample", y="Proportion Human Reads")
ggplot(sgDF0) +
geom_line(aes(x=as.character(SampleID), y=PctHuman, color=Method, group=1), show.legend = TRUE) +
theme(axis.text.x = element_blank())+
labs(x="Sample", y="Proportion Human Reads") +
scale_color_manual(values=c("black", "red", "blue", "darkgreen"))
ggsave("/Volumes/GoogleDrive/My Drive/Callahan Lab/vagMicrobiomeMetagenome/filter_host/filterHuman.pdf", height = 7, width = 13)
ggplot(sgDF0) +
geom_point(aes(x=as.character(SampleID), y=PctHuman, color=Method, group=1), show.legend = TRUE) +
theme(axis.text.x = element_blank())+
labs(x="Sample", y="Proportion Human Reads") +
scale_color_manual(values=c("black", "red", "blue", "darkgreen"))
ggplot(sgDF0) +
geom_line(aes(x=as.character(SampleID), y=PctHuman, color=Method, group=4), show.legend = TRUE) +
theme(axis.text.x = element_blank())+
labs(x="Sample", y="Proportion Human Reads") +
scale_color_manual(values=c("black", "red", "blue", "darkgreen"))
ggplot(sgDF0) +
geom_line(aes(x=as.character(SampleID), y=PctHuman, color=Method), show.legend = TRUE) +
theme(axis.text.x = element_blank())+
labs(x="Sample", y="Proportion Human Reads") +
scale_color_manual(values=c("black", "red", "blue", "darkgreen"))
ggplot(sgDF0) +
geom_line(aes(x=as.character(SampleID), y=PctHuman, color=Method, group=Method), show.legend = TRUE) +
theme(axis.text.x = element_blank())+
labs(x="Sample", y="Proportion Human Reads") +
scale_color_manual(values=c("black", "red", "blue", "darkgreen"))
ggsave("/Volumes/GoogleDrive/My Drive/Callahan Lab/vagMicrobiomeMetagenome/filter_host/filterHuman.pdf")
